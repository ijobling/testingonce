[
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-348386203",
  "source": {
   "name": "How many seconds?",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "42 minutes multiplied by 60 seconds per minute is 2520 seconds.  Adding 42 seconds provides a total of 2,562 seconds.",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/seconds.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Create a print statement that will output the number of seconds in 42 minutes and 42 seconds.",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "2562"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2635110836",
  "source": {
   "name": "How many miles?",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "To convert 10 KM to miles, you would divide the number of kilometers by 1.61 to come up with 6.211180124223602",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/miles.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Create a print statement to answer this question.  How many miles are there in 10 kilometers? \n\nHint: there are 1.61 kilometers in a mile.",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "6.211180124223602"
    }
   ]
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-531739677",
  "source": {
   "name": "Pace",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "To find minutes per mile:\n2562 seconds (from part 1) / 60 seconds/minute = 42.7 minutes\n42.7 minutes / 6.211180124223602 miles (from part 2) = 6.8747 minutes/mile\n\nTo find miles per hour:\n42.7 minutes / 60minutes/hour = .71166666666667 hours\n6.211180124223602 miles (from part 2) / .71166666666667 hours = 8.727664811555412 miles per hour\n\n",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "instructions": "Start the Python interpreter and use it as a calculator.\n\nIf you run a 10 kilometer race in 42 minutes 42 seconds, what is your average pace (time per mile in minutes and seconds)? \n\nWhat is your average speed in miles per hour?",
   "points": 1,
   "incorrectPoints": 0,
   "multipleResponse": true,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "97c72b3c-c005-b3f8-9ee7-0db53e8a9d0f",
     "correct": true,
     "answer": "6.8747 minutes per mile"
    },
    {
     "_id": "e2513cee-72cd-bd0e-b8dc-3d3eb24b2b20",
     "correct": false,
     "answer": "8.5671 minutes per mile"
    },
    {
     "_id": "68b73df6-92e5-fe87-6d76-f91ea3e97685",
     "correct": true,
     "answer": "8.72766 miles per hour"
    },
    {
     "_id": "06cc1ae0-4abf-3d83-814a-312087afb3c1",
     "correct": false,
     "answer": "7.003500 miles per hour"
    }
   ]
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3528825702",
  "source": {
   "name": "print statement syntax",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "<<<syntax error>>>",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Fill in the blank",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "In a print statement, what happens if you leave out one of the parentheses, or both? <<<Syntax Error>>>",
   "tokens": {
    "blank": [
     "Syntax Error"
    ],
    "text": [
     "In a print statement, what happens if you leave out one of the parentheses, or both? ",
     0
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-1373369433",
  "source": {
   "name": "Printing Strings",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "<<< EOL while scanning string literal >>>",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Fill in the Blank",
   "points": "1",
   "showValues": true,
   "learningObjectives": "",
   "text": "If you are trying to print a string, what happens if you leave out one of the quotation marks, or both? <<<String is converted to an integer>>> <<<EOL while scanning string literal>>>",
   "tokens": {
    "blank": [
     "String is converted to an integer",
     "EOL while scanning string literal"
    ],
    "text": [
     "If you are trying to print a string, what happens if you leave out one of the quotation marks, or both? ",
     0,
     " ",
     0
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2478628783",
  "source": {
   "name": "Print strings",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "EOL while scanning string literal",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "If you are trying to print a string, what happens if you leave out one of the quotation marks, or both?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "f0f837a7-2e9c-b69d-709d-520f4733e8b0",
     "correct": true,
     "answer": "EOL while scanning string literal"
    },
    {
     "_id": "d9b98fc3-47a4-9ea5-7e09-17020070ca0c",
     "correct": false,
     "answer": "String is converted to an integer"
    },
    {
     "_id": "cc5e5e56-84a3-55e4-c237-574dc35e3924",
     "correct": false,
     "answer": "Python automatically adds the closing quotation mark when the code is run"
    },
    {
     "_id": "4d1822a2-0285-a0f4-3d90-8444501e5b42",
     "correct": false,
     "answer": "A warning is generated during compilation"
    }
   ]
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2898918383",
  "source": {
   "name": "Signed numbers",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "You can use a minus sign to make a negative number like <span>-2</span>. What happens if you put a plus sign before a number? What about <span>2++2</span>?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3158916856",
  "source": {
   "name": "Leading zeros",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": true,
   "oneTimeTest": true,
   "instructions": "In math notation, leading zeros are ok, as in <span>02</span>. What happens if you try this in Python?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-705754624",
  "source": {
   "name": "No operator",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "What happens if you have two values with no operator between them?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3182075523",
  "source": {
   "name": "Assignment statements",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "Weâ€™ve seen that <span>n = 42</span> is legal. What about <span>42 = n</span>?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-1000159001",
  "source": {
   "name": "Multiple assignment",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "How about <span>x = y = 1</span>?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-701808485",
  "source": {
   "name": "Line endings",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "In some languages every statement ends with a semi-colon, <span>;</span>. What happens if you put a semi-colon at the end of a Python statement?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2242469399",
  "source": {
   "name": "Statement endings",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "What if you put a period at the end of a statement?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2370220429",
  "source": {
   "name": "Multiplication",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "In math notation you can multiply x and y like this: xy. What happens if you try that in Python?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1799092468",
  "source": {
   "name": "Calculate volume",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/exercises_2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "The volume of a sphere with radius $r$ is $\\frac{4}{3} \\pi r^3$. What is the volume of a sphere with radius 5?",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "523.5987755982989"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-147802722",
  "source": {
   "name": "Shipping costs",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/exercises_2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Suppose the cover price of a book is 24.95, but bookstores get a 40 percent discount. Shipping costs 3 dollars for the first copy and 75 cents for each additional copy. What is the total wholesale cost for 60 copies?",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "945.45"
    }
   ]
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-1517147772",
  "source": {
   "name": "How long?",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "7:30:06",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": true,
   "oneTimeTest": true,
   "instructions": "If I leave my house at 6:52 am and run 1 mile at an easy pace (8:15 per mile), then 3 miles at tempo (7:12 per mile) and 1 mile at easy pace again, what time do I get home for breakfast?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3367323985",
  "source": {
   "name": "Time components",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "Answers will vary based on current time when student runs the exercise",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "Write a script that reads the current time and converts it to a time of day in hours, minutes, and seconds, plus the number of days since the epoch.",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3828640500",
  "source": {
   "name": "Calling recursively",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "What would happen if you called this function like this: <span>recurse(-1, 0)</span>?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-1474599446",
  "source": {
   "name": "docstring",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "Write a docstring that explains everything someone would need to know in order to use this function (and nothing else).",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-1222847010",
  "source": {
   "name": "Stack",
   "showName": true,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "What does the program print?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-3413124657",
  "source": {
   "name": "Function 1",
   "showName": false,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "    def any_lowercase1(s):\n             for c in s:\n                 if c.islower():\n                     return True\n                 else:\n                     return False",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-180072190",
  "source": {
   "name": "function 2",
   "showName": false,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "    def any_lowercase2(s):\n            for c in s:\n                if 'c'.islower():\n                    return 'True'\n                else:\n                    return 'False' ",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-920992499",
  "source": {
   "name": "Function 3",
   "showName": false,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "    def any_lowercase3(s):\n        for c in s:\n            flag = c.islower()\n        return flag",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2821882119",
  "source": {
   "name": "Function 4",
   "showName": false,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "    def any_lowercase4(s):\n        flag = False\n        for c in s:\n            flag = flag or c.islower()\n        return flag",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2364923939",
  "source": {
   "name": "Function 5",
   "showName": false,
   "bloomsObjectiveLevel": "2",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "    def any_lowercase5(s):\n        for c in s:\n            if not c.islower():\n                return False\n        return True",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-2592942619",
  "source": {
   "name": "Counting Words in a List",
   "showName": true,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": true,
   "instructions": "Write a function that reads the file <span>words.txt</span> and builds a list with one element per word. Write two versions of this function, one using the <span>append</span> method and the other using the idiom <span>t = t + [x]</span>. Which one takes longer to run? Why?",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 1
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3217928902",
  "source": {
   "name": "Calculate Volume of Sphere",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "The volume of a sphere with a radius $r$ is $\\frac{4}{3} \\pi r^3$. What is the volume (rounded to the nearest hundredth) of a sphere with radius 5?  <<<523.60>>>",
   "tokens": {
    "blank": [
     "523.60"
    ],
    "text": [
     "The volume of a sphere with a radius $r$ is $\\frac{4}{3} \\pi r^3$. What is the volume (rounded to the nearest hundredth) of a sphere with radius 5?  ",
     0
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-4145336160",
  "source": {
   "name": "Total Cost",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "$945.45",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "Suppose the cover price of a book is 24.95, but bookstores get a 40 percent discount. Shipping costs 3 dollars for the first copy and 75 cents for each additional copy. What is the total wholesale cost for 60 copies?  $<<<945.45>>>",
   "tokens": {
    "blank": [
     "945.45"
    ],
    "text": [
     "Suppose the cover price of a book is 24.95, but bookstores get a 40 percent discount. Shipping costs 3 dollars for the first copy and 75 cents for each additional copy. What is the total wholesale cost for 60 copies?  $",
     0
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3179500375",
  "source": {
   "name": "How many seconds?",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "42 minutes multiplied by 60 seconds per minute is 2520 seconds.  Adding 42 seconds provides a total of 2,562 seconds.",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "How many seconds are there in 42 minutes 42 seconds?",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "<<<2562>>> seconds",
   "tokens": {
    "blank": [
     "2562"
    ],
    "text": [
     0,
     " seconds"
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3528387349",
  "source": {
   "name": "How many miles?",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "To convert 10 KM to miles, you would divide the number of kilometers by 1.61 to come up with 6.211180124223602",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "instructions": "",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "How many miles are there in 10 kilometers? \n\nHint: there are 1.61 kilometers in a mile.\n\n<<<6.211180124223602>>> miles",
   "tokens": {
    "blank": [
     "6.211180124223602"
    ],
    "text": [
     "How many miles are there in 10 kilometers? \n\nHint: there are 1.61 kilometers in a mile.\n\n",
     0,
     " miles"
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-1457711782",
  "source": {
   "name": "Leading Zeros",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "In math notation, leading zeros are ok, as in <span>02</span>. What happens if you try this in Python?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "c434b93f-37e8-f5d0-46bf-16b1d3d50027",
     "correct": false,
     "answer": "It works the same as math notation"
    },
    {
     "_id": "1b39a293-c097-73d3-d48a-1f50411166a8",
     "correct": true,
     "answer": "SyntaxError: invalid token"
    },
    {
     "_id": "2f13c001-8d0e-27d1-cb20-82ef26560879",
     "correct": false,
     "answer": "SyntaxError: invalid syntax"
    }
   ]
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-4178934980",
  "source": {
   "name": "No operator",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "What happens if you have two values with no operator between them?\n",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "The terminal prints <<<SyntaxError: invalid syntax>>>",
   "tokens": {
    "blank": [
     "SyntaxError: invalid syntax"
    ],
    "text": [
     "The terminal prints ",
     0
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-1060167938",
  "source": {
   "name": "How long?",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "If I leave my house at 6:52 am and run 1 mile at an easy pace (8:15 per mile), then 3 miles at tempo (7:12 per mile) and 1 mile at easy pace again, what time do I get home for breakfast?\n",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "<<<07>>>:<<<30>>>:<<<06>>> am\n\n(include leading zeros)",
   "tokens": {
    "blank": [
     "07",
     "30",
     "06"
    ],
    "text": [
     0,
     ":",
     0,
     ":",
     0,
     " am\n\n(include leading zeros)"
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-182777174",
  "source": {
   "name": "Assignment Syntax",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Weâ€™ve seen that <span>n = 42</span> is legal. What about <span>42 = n</span>?",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "The terminal outputs <<<SyntaxError: can't assign to literal>>>",
   "tokens": {
    "blank": [
     "SyntaxError: can't assign to literal"
    ],
    "text": [
     "The terminal outputs ",
     0
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3014115606",
  "source": {
   "name": "Multiple Assignments",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "How about <span>x = y = 1</span>?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "cf52b294-166f-348f-d841-35fca345f265",
     "correct": false,
     "answer": "SyntaxError: can't assign to literal"
    },
    {
     "_id": "9f94ffea-d382-4679-675f-a7ea86ea3339",
     "correct": false,
     "answer": "SyntaxError: invalid syntax"
    },
    {
     "_id": "e1d6f12f-d8d1-1a3b-8c8d-82d1f444c972",
     "correct": true,
     "answer": "The program assigns 1 to both x and y"
    },
    {
     "_id": "26df8b05-d433-a494-e4d9-cfce2aa97809",
     "correct": false,
     "answer": "NameError"
    }
   ]
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-1574873620",
  "source": {
   "name": "Line Endings",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "In some languages every statement ends with a semi-colon, ;. What happens if you put a semi-colon at the end of a Python statement?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "49587692-30c2-5cb4-d415-27c3d726c978",
     "correct": false,
     "answer": "SyntaxError: invalid syntax"
    },
    {
     "_id": "41f8d443-3b4c-e4ce-8ab5-1cc10d1f00ea",
     "correct": false,
     "answer": "SyntaxError: invalid token"
    },
    {
     "_id": "d520dcce-8fd2-121a-3814-6727d486038b",
     "correct": false,
     "answer": "NameError"
    },
    {
     "_id": "913d8867-b4a7-a02f-5b21-4e290788f3e1",
     "correct": true,
     "answer": "The program works as expected"
    }
   ]
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-1056791596",
  "source": {
   "name": "Statement Endings",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "What if you put a period at the end of a statement?\n",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "The terminal outputs <<<SyntaxError: invalid syntax>>>",
   "tokens": {
    "blank": [
     "SyntaxError: invalid syntax"
    ],
    "text": [
     "The terminal outputs ",
     0
    ]
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-2614494355",
  "source": {
   "name": "Multiplication",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "In math notation you can multiply x and y like this: xy. What happens if you try that in Python?",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "The terminal outputs <<<NameError: name 'xy' is not defined>>>",
   "tokens": {
    "blank": [
     "NameError: name 'xy' is not defined"
    ],
    "text": [
     "The terminal outputs ",
     0
    ]
   }
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3425152502",
  "source": {
   "name": "exercise_3.1",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/function_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your program so the computer can test it. \n\n        right_justify(input())\n\nThen check your code by clicking the button below",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "monty",
     "output": "                                                                 monty"
    },
    {
     "arguments": "",
     "input": "monkies",
     "output": "                                                               monkies"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3951927146",
  "source": {
   "name": "exercise_3.2",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "Solution: <http://thinkpython2.com/code/do_four.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/exercise_3-2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Replace any function call you have at the end of your script with the following:\n\n    do_four(print_twice, input())\n\nThen, submit your code by clicking the button below",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "spam",
     "output": "spam\nspam\nspam\nspam\nspam\nspam\nspam\nspam"
    },
    {
     "arguments": "",
     "input": "cat",
     "output": "cat\ncat\ncat\ncat\ncat\ncat\ncat\ncat"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-591127166",
  "source": {
   "name": "exercise_3.3",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "Solution: <http://thinkpython2.com/code/grid.py>. Credit: This exercise is based on an exercise in Oualline, <span>*Practical C Programming, Third Edition*</span>, Oâ€™Reilly Media, 1997.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/exercise_3-3.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Submit your code by clicking the button below.",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "+ - - - - + - - - - +\n|         |         |\n|         |         |\n|         |         |\n|         |         |\n+ - - - - + - - - - +\n|         |         |\n|         |         |\n|         |         |\n|         |         |\n+ - - - - + - - - - +"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-145839972",
  "source": {
   "name": "exercise5.2",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/exercise_5-2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Remove any user prompts from your code (so the user types each number followed by enter with nothing printing).\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": true,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "3\n4\n5\n2",
     "output": "No, that doesnâ€™t work."
    },
    {
     "arguments": "",
     "input": "1\n2\n3\n1",
     "output": "Holy smokes, Fermat was wrong!"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3866282499",
  "source": {
   "name": "exercise 5.3",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/exercise_5-3.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Remove any user prompts from your code (so the user types each number followed by enter with nothing printing).\n\nThen, submit your code by clicking the button below:\n\n",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "1\n1\n12\n",
     "output": "No"
    },
    {
     "arguments": "",
     "input": "3\n4\n5",
     "output": "Yes"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1992895610",
  "source": {
   "name": "exercise 6.2",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "Solution: <http://thinkpython2.com/code/ackermann.py>. ",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/exercises_4.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Replace any function calls at the end of your code with the following:\n\n    ack(input(),input())\n\nThen, submit your code using the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "3\n3\n",
     "output": "61"
    },
    {
     "arguments": "",
     "input": "3\n4\n",
     "output": "125"
    },
    {
     "arguments": "",
     "input": "0\n0\n",
     "output": "1"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-758402567",
  "source": {
   "name": "exercise 6.3",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "Solution: <http://thinkpython2.com/code/palindrome_soln.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/palindrome.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Replace any function calls at the end of your code with the following:\n\n    print(is_palindrome(input()))\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "racecar",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "banana",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2496986975",
  "source": {
   "name": "exercise 6.4",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/exercise_6-4.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Replace any function calls at the end of your code with the following:\n\n    print(is_power(input()))\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "8\n2",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "10\n2",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1894224389",
  "source": {
   "name": "exercise 6.5",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/gcd.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Replace any function calls at the end of your code with the following:\n\n    gcd( input(), input() )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "8\n4\n",
     "output": "4"
    },
    {
     "arguments": "",
     "input": "12\n8\n",
     "output": "4\n"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-18622402",
  "source": {
   "name": "exercise 7.2",
   "showName": false,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/eval_loop.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "1 + 2 * 3\ndone\n",
     "output": "7"
    },
    {
     "arguments": "",
     "input": "2**3\ndone",
     "output": "8"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1310791755",
  "source": {
   "name": "exercise 8.3",
   "showName": false,
   "bloomsObjectiveLevel": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/new_palindrome.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line to your code at the end and make sure your one-line palindrome check is inside a function called `is_palindrome()` which takes a string as a parameter and returns whether it is (True) or not (False).\n\n    print( is_palindrome( input() ) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "racecar",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "banana",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-420630043",
  "source": {
   "name": "exercise 8.5",
   "showName": false,
   "bloomsObjectiveLevel": "6",
   "guidance": "Solution: <http://thinkpython2.com/code/rotate.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/caesar.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line to the end of your code:\n\n    print( rotate_word( input(), int(input()) ) )\n\nThen, submit your code by pressing the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "cheer\n7",
     "output": "jolly"
    },
    {
     "arguments": "",
     "input": "melon\n-10",
     "output": "cubed"
    },
    {
     "arguments": "",
     "input": "IBM\n-1",
     "output": "HAL"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-887892343",
  "source": {
   "name": "exercise 9.7",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/cartalk1.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "preExecuteCommand": "",
   "command": "python3 code/cartalk.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Once your program prints out all the three consecutive double letter words in words.txt, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "bookkeeper\nbookkeepers\nbookkeeping\nbookkeepings"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1362944689",
  "source": {
   "name": "exercise 9.8",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/cartalk2.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/cartalk2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Once your program prints out all the odometer readings, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "198888\n199999"
    }
   ]
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-1157571896",
  "source": {
   "name": "exercise 9.9",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/cartalk3.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "instructions": "When you think you know the answer, fill in the ages below.",
   "points": "1",
   "showValues": false,
   "learningObjectives": "",
   "text": "Right now, the question asker is <<<57>>> years old and their mother is <<<75>>> years old.",
   "tokens": {
    "blank": [
     "57",
     "75"
    ],
    "text": [
     "Right now, the question asker is ",
     0,
     " years old and their mother is ",
     0,
     " years old."
    ]
   }
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-494022662",
  "source": {
   "name": "exercise 10.1",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    nested_sum( eval(input()) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[ [1],[2],[3]]",
     "output": "6"
    },
    {
     "arguments": "",
     "input": "[[1,2],[3,4],[5]]",
     "output": "15"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1457472805",
  "source": {
   "name": "exercise 10.2",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    cumsum( eval(input()) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[2, 4, 6]",
     "output": "[2, 6, 12]"
    },
    {
     "arguments": "",
     "input": "[1, 3, 5]",
     "output": "[1, 4, 9]"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3748038241",
  "source": {
   "name": "exercise 10.3",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    middle( eval(input()) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[1,2,3,4]",
     "output": "[2, 3]"
    },
    {
     "arguments": "",
     "input": "[5, 6, 7]",
     "output": "[6]"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1149399147",
  "source": {
   "name": "exercise 10.4 ",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    temp = eval(input())\n    chop( temp )\n    print(temp)\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[1, 2, 3, 4]",
     "output": "[2, 3]"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3000215543",
  "source": {
   "name": "exercise 10.5",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists/exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    print( is_sorted( eval(input()) ) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[1, 2, 3]",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "[5, 4, 3, 2, 1]",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3887924794",
  "source": {
   "name": "exercise 10.6",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    print( is_anagram(input(), input() ) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "astronomer\nmoon starer\n",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "the eyes\nthey see\n",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "dog\ncat\n",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-3268379659",
  "source": {
   "name": "exercise 10.7",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "You can download solutions to these exercises from <http://thinkpython2.com/code/list_exercises.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/lists_exercises.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    print( has_duplicates( eval( input() ) ) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[1, 2, 3]",
     "output": "False"
    },
    {
     "arguments": "",
     "input": "[1, 2, 2, 3]",
     "output": "True"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1428225196",
  "source": {
   "name": "exercise 10.10",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/inlist.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/bisection.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following to the end of your program:\n    \n    word_list = []\n    fin = open('words.txt')\n    for line in fin:\n        word = line.strip()\n        word_list.append(word)\n    print(in_bisect(word_list, input()))\n\nThen click the button below to submit your program:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "alien\n",
     "output": "True"
    },
    {
     "arguments": "",
     "input": "allen\n",
     "output": "False"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-150852830",
  "source": {
   "name": "exercise 10.11",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/reverse_pair.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/reverse_pair_try.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "aa aa\naba aba\nabut tuba\nad da\nados soda\naga aga\nagar raga\nagas saga\nagenes senega\nah ha\naha aha\naider redia\nairts stria\najar raja\nala ala\nalif fila\nalula alula\nam ma\nama ama\namen nema\namis sima\nan na\nana ana\nanger regna\nanimal lamina\nanimes semina\nanna anna\nanon nona\nante etna\nare era\nares sera\naril lira\narris sirra\narum mura\nat ta\nate eta\nates seta\nauks skua\nava ava\navid diva\navo ova\nawa awa\nay ya\nbad dab\nbag gab\nbal lab\nbals slab\nban nab\nbard drab\nbas sab\nbat tab\nbats stab\nbed deb\nben neb\nbib bib\nbid dib\nbig gib\nbin nib\nbins snib\nbird drib\nbis sib\nbob bob\nbog gob\nboob boob\nbos sob\nbots stob\nbows swob\nbrad darb\nbrag garb\nbub bub\nbud dub\nbun nub\nbuns snub\nbur rub\nburd drub\nburg grub\nbus sub\nbut tub\nbuts stub\ncam mac\ncap pac\ncares serac\ncivic civic\ncod doc\ncram marc\ncud duc\nda ad\ndab bad\ndad dad\ndag gad\ndah had\ndahs shad\ndam mad\ndap pad\ndarb brad\ndart trad\ndaw wad\ndeb bed\ndebut tubed\ndecal laced\ndedal laded\ndeed deed\ndeem meed\ndeep peed\ndeeps speed\ndeer reed\ndees seed\ndefer refed\ndegami imaged\ndeified deified\ndeifier reified\ndeil lied\ndeke eked\ndeked deked\ndel led\ndeled deled\ndelf fled\ndeliver reviled\ndels sled\ndemit timed\ndenier reined\ndenies seined\ndenim mined\ndenned denned\ndens sned\ndepot toped\ndepots stoped\nderat tared\nderats stared\ndessert tressed\ndesserts stressed\ndevas saved\ndevil lived\ndew wed\ndewans snawed\ndewed dewed\ndexes sexed\ndial laid\ndialer relaid\ndiaper repaid\ndib bid\ndid did\ndig gid\ndim mid\ndinar ranid\ndiols sloid\ndirts strid\ndiva avid\ndo od\ndoc cod\ndog god\ndom mod\ndon nod\ndoom mood\ndoor rood\ndor rod\ndormin nimrod\ndorp prod\ndos sod\ndot tod\ndrab bard\ndrail liard\ndraw ward\ndrawer reward\ndraws sward\ndray yard\ndrib bird\ndrub burd\ndual laud\ndub bud\nduc cud\nducs scud\ndud dud\nduel leud\nduo oud\ndup pud\ndups spud\neat tae\nedile elide\nedit tide\neel lee\neh he\neke eke\neked deke\nelide edile\nelides sedile\nem me\neme eme\nemes seme\nemir rime\nemit time\nemits stime\nenol lone\ner re\nera are\nere ere\nergo ogre\neros sore\nervil livre\neta ate\netas sate\netna ante\neve eve\neven neve\nevil live\neviler relive\newe ewe\neye eye\nfer ref\nfila alif\nfires serif\nfled delf\nflog golf\nflow wolf\nfool loof\ngab bag\ngad dag\ngag gag\ngal lag\ngals slag\ngam mag\ngan nag\ngar rag\ngarb brag\ngas sag\ngat tag\ngats stag\ngel leg\ngelder redleg\nget teg\ngib big\ngid dig\ngig gig\ngip pig\ngirt trig\ngnar rang\ngnat tang\ngnats stang\ngnaws swang\ngnus sung\ngob bog\ngod dog\ngolf flog\ngot tog\ngrub burg\ngul lug\ngulp plug\nguls slug\ngum mug\ngums smug\nguns snug\ngut tug\nha ah\nhabus subah\nhad dah\nhah hah\nhahs shah\nhalalah halalah\nhales selah\nhallah hallah\nhap pah\nhay yah\nhe eh\nhey yeh\nho oh\nhoop pooh\nhop poh\nhuh huh\nimaged degami\nis si\nit ti\njar raj\nkaiak kaiak\nkay yak\nkayak kayak\nkeek keek\nkeel leek\nkeels sleek\nkeep peek\nkeets steek\nkips spik\nknaps spank\nknar rank\nknits stink\nkook kook\nlab bal\nlaced decal\nladed dedal\nlag gal\nlager regal\nlaid dial\nlair rial\nlamina animal\nlap pal\nlares seral\nlarum mural\nlas sal\nlaud dual\nled del\nlee eel\nleek keel\nleer reel\nlees seel\nleets steel\nleg gel\nleper repel\nleud duel\nlevel level\nlever revel\nlevins snivel\nliar rail\nliard drail\nlied deil\nlin nil\nlion noil\nlira aril\nlit til\nlive evil\nlived devil\nlivre ervil\nlobo obol\nlone enol\nloof fool\nloom mool\nloons snool\nloop pool\nloops spool\nloot tool\nlooter retool\nloots stool\nlop pol\nlotos sotol\nlug gul\nma am\nmac cam\nmacs scam\nmad dam\nmadam madam\nmaes seam\nmag gam\nmap pam\nmar ram\nmarc cram\nmarcs scram\nmarram marram\nmart tram\nmat tam\nmaws swam\nmay yam\nme em\nmeed deem\nmeet teem\nmem mem\nmeter retem\nmho ohm\nmid dim\nmils slim\nmim mim\nmined denim\nminim minim\nmir rim\nmis sim\nmod dom\nmom mom\nmon nom\nmood doom\nmool loom\nmoor room\nmoot toom\nmot tom\nmug gum\nmum mum\nmura arum\nmural larum\nmures serum\nmus sum\nmuts stum\nna an\nnab ban\nnag gan\nnamer reman\nnap pan\nnaps span\nneb ben\nneep peen\nnema amen\nnet ten\nneve even\nneves seven\nnew wen\nnib bin\nnil lin\nnimrod dormin\nnip pin\nnips spin\nnit tin\nno on\nnod don\nnoil lion\nnolos solon\nnom mon\nnona anon\nnoon noon\nnos son\nnot ton\nnotes seton\nnow won\nnu un\nnub bun\nnun nun\nnus sun\nnut tun\nnuts stun\noat tao\nobol lobo\nod do\nogre ergo\noh ho\nohm mho\noho oho\non no\noohs shoo\noot too\nos so\notto otto\noud duo\nova avo\now wo\npac cap\npacer recap\npad dap\npah hap\npal lap\npals slap\npam map\npan nap\npans snap\npap pap\npar rap\npart trap\nparts strap\npas sap\npat tap\npaw wap\npaws swap\npay yap\npeed deep\npeek keep\npeels sleep\npeen neep\npeep peep\npees seep\npep pep\nper rep\npets step\npig gip\npin nip\npins snip\npip pip\npis sip\npit tip\nplug gulp\npoh hop\npol lop\npols slop\npooh hoop\npool loop\npools sloop\npoons snoop\npoop poop\npop pop\nport trop\nports strop\npot top\npots stop\npow wop\npows swop\nprat tarp\nprod dorp\npud dup\npup pup\npupils slipup\npuris sirup\npus sup\nput tup\nradar radar\nrag gar\nraga agar\nrail liar\nraj jar\nraja ajar\nram mar\nrang gnar\nranid dinar\nrank knar\nrap par\nraps spar\nrat tar\nrats star\nraw war\nray yar\nre er\nrebus suber\nrebut tuber\nrecap pacer\nrecaps spacer\nredder redder\nredes seder\nredia aider\nredips spider\nredleg gelder\nredraw warder\nredrawer rewarder\nreed deer\nreel leer\nrees seer\nref fer\nrefed defer\nrefer refer\nreflet telfer\nreflow wolfer\nregal lager\nregna anger\nreified deifier\nreifier reifier\nreined denier\nreknit tinker\nreknits stinker\nrelaid dialer\nrelit tiler\nrelive eviler\nreman namer\nremeet teemer\nremit timer\nrennet tenner\nrep per\nrepaid diaper\nrepaper repaper\nrepel leper\nrepins sniper\nres ser\nretem meter\nretool looter\nrevel lever\nreviled deliver\nreviver reviver\nreward drawer\nrewarder redrawer\nrial lair\nrim mir\nrime emir\nrod dor\nrood door\nroom moor\nrot tor\nrotator rotator\nrotor rotor\nrub bur\nsab bas\nsag gas\nsaga agas\nsagas sagas\nsal las\nsallets stellas\nsap pas\nsaps spas\nsat tas\nsate etas\nsaved devas\nsaw was\nscam macs\nscares seracs\nscram marcs\nscud ducs\nseam maes\nsecret terces\nseder redes\nsedile elides\nseed dees\nseeks skees\nseel lees\nseep pees\nseer rees\nsees sees\nseined denies\nselah hales\nselahs shales\nselles selles\nseme emes\nsememes sememes\nsemes semes\nsemina animes\nsenega agenes\nser res\nsera ares\nserac cares\nseracs scares\nseral lares\nseres seres\nserif fires\nserum mures\nseta ates\nseton notes\nseven neves\nsexed dexes\nsexes sexes\nshad dahs\nshah hahs\nshahs shahs\nshales selahs\nshoo oohs\nsi is\nsib bis\nsim mis\nsima amis\nsip pis\nsirra arris\nsirs sris\nsirup puris\nsis sis\nsit tis\nsix xis\nskees seeks\nskeets steeks\nskips spiks\nskua auks\nslab bals\nslag gals\nslap pals\nsled dels\nsleek keels\nsleep peels\nsleeps speels\nsleets steels\nslim mils\nslipup pupils\nslit tils\nsloid diols\nsloop pools\nsloops spools\nslop pols\nslug guls\nsmart trams\nsmug gums\nsmuts stums\nsnap pans\nsnaps spans\nsnaw wans\nsnawed dewans\nsnaws swans\nsned dens\nsnib bins\nsnip pins\nsniper repins\nsnips spins\nsnit tins\nsnivel levins\nsnool loons\nsnoop poons\nsnoops spoons\nsnoot toons\nsnot tons\nsnow wons\nsnub buns\nsnug guns\nso os\nsob bos\nsod dos\nsoda ados\nsolon nolos\nsolos solos\nson nos\nsore eros\nsos sos\nsotol lotos\nsow wos\nspacer recaps\nspan naps\nspank knaps\nspans snaps\nspar raps\nspas saps\nspat taps\nspay yaps\nspeed deeps\nspeels sleeps\nspider redips\nspik kips\nspiks skips\nspin nips\nspins snips\nspirt trips\nspirts strips\nspit tips\nspool loops\nspools sloops\nspoons snoops\nsports strops\nspot tops\nspots stops\nsprat tarps\nsprits stirps\nspud dups\nsris sirs\nstab bats\nstag gats\nstang gnats\nstar rats\nstared derats\nstaw wats\nsteek keets\nsteeks skeets\nsteel leets\nsteels sleets\nstellas sallets\nstep pets\nstets stets\nstew wets\nstime emits\nstink knits\nstinker reknits\nstirps sprits\nstob bots\nstool loots\nstop pots\nstoped depots\nstops spots\nstow wots\nstows swots\nstrap parts\nstraw warts\nstressed desserts\nstria airts\nstrid dirts\nstrips spirts\nstrop ports\nstrops sports\nstrow worts\nstruts sturts\nstub buts\nstum muts\nstums smuts\nstun nuts\nsturts struts\nsub bus\nsubah habus\nsuber rebus\nsum mus\nsun nus\nsung gnus\nsup pus\nswam maws\nswang gnaws\nswans snaws\nswap paws\nsward draws\nswat taws\nsway yaws\nswob bows\nswop pows\nswot tows\nswots stows\nta at\ntab bat\ntae eat\ntag gat\ntam mat\ntang gnat\ntao oat\ntap pat\ntaps spat\ntar rat\ntared derat\ntarp prat\ntarps sprat\ntas sat\ntat tat\ntav vat\ntaw wat\ntaws swat\nteem meet\nteemer remeet\nteg get\ntelfer reflet\nten net\ntenet tenet\ntenner rennet\nterces secret\nterret terret\ntew wet\nti it\ntide edit\ntil lit\ntiler relit\ntils slit\ntime emit\ntimed demit\ntimer remit\ntin nit\ntinker reknit\ntins snit\ntip pit\ntips spit\ntis sit\ntit tit\ntod dot\ntog got\ntom mot\nton not\ntons snot\ntoo oot\ntool loot\ntoom moot\ntoons snoot\ntoot toot\ntop pot\ntoped depot\ntops spot\ntor rot\ntort trot\ntot tot\ntow wot\ntows swot\ntrad dart\ntram mart\ntrams smart\ntrap part\ntressed dessert\ntrig girt\ntrips spirt\ntrop port\ntrot tort\ntrow wort\ntub but\ntuba abut\ntubed debut\ntuber rebut\ntug gut\ntun nut\ntup put\ntut tut\nun nu\nvat tav\nvav vav\nwad daw\nwans snaw\nwap paw\nwar raw\nward draw\nwarder redraw\nwarts straw\nwas saw\nwat taw\nwats staw\nwaw waw\nway yaw\nwed dew\nwen new\nwet tew\nwets stew\nwo ow\nwolf flow\nwolfer reflow\nwon now\nwons snow\nwop pow\nwort trow\nworts strow\nwos sow\nwot tow\nwots stow\nwow wow\nxis six\nya ay\nyah hay\nyak kay\nyam may\nyap pay\nyaps spay\nyar ray\nyard dray\nyaw way\nyaws sway\nyay yay\nyeh hey\n"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-4133651850",
  "source": {
   "name": "exercise 11.4",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/has_duplicates.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/dictionary_1.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following line of code to the end of your script, replacing any function calls:\n\n    print( has_duplicates( eval( input() ) ) )\n\nThen, submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "[1, 2, 3]",
     "output": "False"
    },
    {
     "arguments": "",
     "input": "[1, 2, 2, 3]",
     "output": "True"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1911792617",
  "source": {
   "name": "exercise 11.5",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/rotate_pairs.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/exrotate_2.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Have your code print out the original word, the amount of rotation (from 1 to 14) and the rotated word with a single space in between.\n\nThen, submit your code with the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": true,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "muffs 6 sally\ndew 10 nog\nbaal 3 eddo\ndug 6 jam\nmix 6 sod\nad 1 be\nad 4 eh\nad 11 lo\nrail 13 envy\nmay 2 oca\nnor 1 ops\nnor 6 tux\nwhit 7 dopa\nqua 6 wag\nvie 9 ern\nnod 1 ope\nnod 12 zap\now 8 we\now 12 ai\nsync 6 yeti\nsync 13 flap\nbalk 13 onyx\ngoas 12 same\nluny 6 rate\njehu 10 tore\nbeer 7 illy\nwich 6 coin\ninks 1 jolt\nfit 9 orc\nbed 7 ilk\nhips 12 tube\npip 12 bub\nhymn 6 nest\ndory 3 grub\nvim 6 bos\nluffs 6 rally\nrids 12 dupe\ndawk 8 lies\naxal 3 dado\nwoo 4 ass\ndo 5 it\ndo 12 pa\ndank 4 hero\nlye 2 nag\narm 3 dup\nbomb 6 hush\nreef 13 errs\nweed 10 goon\nsap 4 wet\nweal 8 emit\njin 5 ons\njin 6 pot\nsize 9 brin\nprex 7 wyle\nprex 9 yang\ndib 12 pun\nlib 3 ole\npig 12 bus\nemu 10 owe\nso 8 aw\nhid 12 tup\nwhen 13 jura\nmott 12 yaff\nsecco 10 commy\none 4 sri\none 13 bar\nrape 11 clap\nluna 4 pyre\nflap 13 sync\nredo 10 bony\nrho 1 sip\nbutyl 6 hazer\nlob 3 ore\ncap 4 get\nis 6 oy\ngaen 4 keir\nbods 12 nape\nsen 10 cox\nurn 9 daw\nraphe 11 clasp\ncee 2 egg\ncee 10 moo\nha 7 oh\nha 8 pi\nha 13 un\ntang 13 gnat\nmule 6 sark\nmold 3 prog\nzips 12 lube\nsax 4 web\nebbs 13 roof\ngal 4 kep\npya 6 veg\nfog 6 lum\nfog 12 ras\nher 1 ifs\nher 10 rob\nohms 1 pint\nsris 9 barb\ndey 4 hic\nstun 11 defy\noud 10 yen\nshute 10 credo\nadz 5 fie\nalt 3 dow\ncobb 3 free\nopen 4 stir\norb 3 rue\nohs 1 pit\nohs 12 ate\nova 13 bin\neches 6 kinky\nanna 1 boob\ndab 7 khi\nain 6 got\ntorc 12 fado\nda 4 he\nda 5 if\nda 8 li\nsilk 9 brut\nibex 7 pile\nawl 12 mix\ndap 4 het\nhi 6 no\nhi 7 op\nmills 6 sorry\nhay 8 pig\nfop 9 oxy\njug 6 pam\nbulls 6 harry\naby 3 deb\nvex 9 eng\nvex 10 foh\nvex 13 irk\nlox 3 ora\ndee 1 eff\ndee 10 noo\nsei 10 cos\noh 1 pi\noh 6 un\noh 12 at\nfohn 6 lunt\njiff 6 poll\nhex 4 lib\nhex 7 ole\nfey 10 poi\nwiver 9 frena\nbarf 13 ones\njut 10 ted\nbaff 8 jinn\nrod 12 dap\nbar 13 one\ngassy 12 smeek\ncrag 13 pent\nfor 6 lux\nfor 12 rad\ntav 8 bid\nraps 11 clad\natma 7 hath\ngolly 6 murre\nbis 6 hoy\nmola 3 prod\nails 6 gory\nilk 9 rut\nnun 6 tat\nnun 13 aha\nor 12 ad\nor 13 be\nerr 13 ree\nlin 6 rot\ndip 12 pub\nmunch 6 satin\nnth 11 yes\npung 13 chat\nwheel 7 dolls\nvaw 8 die\ndjin 5 ions\nwo 4 as\ngird 9 pram\nkip 9 try\nfat 8 nib\nend 1 foe\ndeed 10 noon\nsyn 6 yet\npath 11 ales\nseas 8 amia\nsri 9 bar\nsel 13 fry\nshe 13 fur\ngid 12 sup\nsleep 9 bunny\noaf 8 win\nton 1 upo\nnos 1 opt\nslam 2 unco\nion 6 out\ntask 8 bias\nbuy 6 hae\nbuy 10 lei\nfib 12 run\nbe 3 eh\nbe 10 lo\nbe 13 or\njay 8 rig\nbos 12 nae\nperry 13 creel\nwon 6 cut\nka 4 oe\nka 8 si\njinns 6 potty\nicy 2 kea\nmol 3 pro\nhap 4 let\nhap 8 pix\nsheer 1 tiffs\nratan 4 vexer\nhaw 4 lea\nhaw 8 pie\nteloi 3 whorl\ncud 10 men\nodor 1 peps\nhotel 7 ovals\ngulls 6 marry\nbolls 6 hurry\nmut 10 wed\ntoys 12 fake\ncrap 3 fuds\nhoggs 12 tasse\nawn 4 ear\nganja 4 kerne\ngunny 6 matte\nserer 13 frere\ntalk 8 bits\nheil 4 limp\nfrere 13 serer\npry 3 sub\npry 9 yah\nark 3 dun\ngift 12 surf\nrev 9 ane\njus 6 pay\nnag 13 ant\nba 13 on\ntouch 12 fagot\nli 12 xu\njimmy 6 posse\npogy 12 bask\nxu 4 by\nxu 6 da\nxu 10 he\nxu 11 if\nbi 3 el\nbi 6 ho\nbi 12 nu\nmoly 6 sure\nperk 3 shun\npith 11 ates\nnob 13 abo\npa 8 xi\ngip 9 pry\ngip 12 sub\ndodo 6 juju\ndodo 12 papa\nirk 9 rat\nirk 13 vex\nfusion 6 layout\nrei 4 vim\nrei 10 bos\npaw 4 tea\nfrag 13 sent\ntun 10 dex\njog 12 vas\npoh 12 bat\nbuff 6 hall\npia 12 bum\nani 7 hup\nbye 2 dag\nviola 6 bourg\npecan 4 tiger\nswop 4 wast\ngig 6 mom\nvats 11 gled\nsae 8 aim\nom 6 us\nom 12 ay\nperi 3 shul\nalb 3 doe\nlea 4 pie\npi 5 un\npi 11 at\nod 1 pe\nod 4 sh\nod 5 ti\nmuch 6 sain\nfoh 3 irk\nfoh 12 rat\nguts 6 mazy\nloaf 8 twin\nhint 11 stye\nfibs 12 rune\nbud 6 haj\nknar 1 lobs\nmem 10 wow\naril 7 hyps\nkors 12 wade\nfox 12 raj\nink 7 pur\nref 10 bop\nref 13 ers\npuna 4 tyre\nsec 4 wig\njogs 12 vase\nmi 6 so\nsoil 12 eaux\nree 10 boo\nree 13 err\nhuic 6 naoi\nstar 1 tubs\nfon 10 pyx\nvin 6 bot\nmumm 6 sass\nnab 4 ref\nnoggs 6 tummy\nhaes 8 pima\nlit 7 spa\nbob 3 ere\nbob 6 huh\nbod 3 erg\nbod 12 nap\npin 5 uns\nspot 11 daze\nrap 4 vet\nguy 6 mae\nhog 12 tas\nbas 4 few\ndrip 3 guls\nsod 8 awl\nfud 10 pen\ndogs 12 pase\nnowhere 13 abjurer\njet 4 nix\njet 10 tod\nair 6 gox\nair 12 mud\npit 11 ate\nolla 3 rood\nbuffi 6 hallo\nwha 4 ale\nwha 13 jun\ntins 12 fuze\nvis 6 boy\nvis 12 hue\ndaff 8 linn\nhot 7 ova\nply 3 sob\nsad 8 ail\nsue 6 yak\nhag 4 lek\nling 7 spun\ndui 11 oft\nus 6 ay\nled 10 von\ntui 10 des\ntui 11 eft\njew 10 tog\nhewn 4 liar\ncraal 13 penny\njee 10 too\nam 12 my\nsow 8 awe\ntimer 7 aptly\nyank 4 cero\nmulch 6 sarin\nen 10 ox\neats 11 pled\ngreen 13 terra\nbay 8 jig\nvans 8 diva\nrip 12 dub\nkop 12 wab\nhip 12 tub\nroad 12 damp\ntors 12 fade\nlab 3 ode\nboa 6 hug\nproa 3 surd\neme 8 mum\ntrig 9 carp\njohns 6 punty\nhawk 8 pies\nvia 6 bog\nvia 12 hum\njerky 9 snath\nort 13 beg\nitch 11 tens\nops 5 tux\nted 10 don\nkae 8 sim\nhod 12 tap\nnils 6 tory\nache 6 gink\nfeet 10 pood\nlas 4 pew\nlowe 6 ruck\npets 11 aped\nmog 6 sum\nrads 11 clod\nlion 6 rout\nsh 1 ti\nsh 12 et\ndon 5 its\ndon 6 jut\ncloy 3 forb\npurs 13 chef\nfoam 6 lugs\nlink 7 spur\neth 11 pes\npiu 12 bug\nhet 10 rod\nods 1 pet\nods 12 ape\nazon 5 fets\npepo 4 tits\nxeric 9 gnarl\nsewed 10 cogon\newe 8 mem\nrye 2 tag\nrye 10 bio\nvon 6 but\nfumy 6 lase\nwhee 7 doll\nhats 11 sled\npup 6 vav\nczar 1 dabs\ngox 6 mud\nley 4 pic\nla 3 od\nla 4 pe\nla 7 sh\nla 8 ti\nrub 10 bel\nun 6 at\nun 10 ex\nun 13 ha\npea 4 tie\nrep 9 any\nons 1 pot\nmho 1 nip\nmho 10 wry\nwe 4 ai\nwe 8 em\nwe 10 go\nahull 6 gnarr\nloam 6 rugs\nbuts 6 hazy\ntub 10 del\naped 5 fuji\nhaji 11 slut\nfob 3 ire\nfob 12 ran\ntat 7 aha\ntat 8 bib\nbug 6 ham\ndolt 3 grow\naxe 3 dah\naxe 11 lip\ntenet 7 alula\ngel 4 kip\ngel 13 try\ntout 10 dyed\ntrek 9 cant\ncolt 3 frow\nfou 10 pye\nfou 12 rag\nme 10 wo\nut 7 ba\nbatt 8 jibb\nboy 6 hue\nti 11 et\nmar 7 thy\nnee 1 off\nem 2 go\nem 8 mu\nem 10 ow\ntom 12 fay\nice 2 keg\ncaps 2 ecru\nlet 4 pix\nabo 4 efs\nabo 13 nob\nwere 10 gobo\nbee 7 ill\nbee 10 loo\nids 1 jet\nids 5 nix\nids 11 tod\npah 7 who\naff 8 inn\nhods 12 tape\npawn 4 tear\nzax 1 aby\nzax 4 deb\nyar 2 act\nhogg 12 tass\nmid 12 yup\nale 9 jun\nora 13 ben\nfug 6 lam\njinni 6 potto\ntons 12 faze\nrut 10 bed\nthy 13 gul\nope 11 zap\nmim 6 sos\nwen 4 air\nwen 10 gox\ntew 10 dog\nboas 12 name\nabjurer 13 nowhere\nloop 4 psst\npaid 11 alto\ndei 4 him\ndei 10 nos\ndei 11 opt\nodd 1 pee\nodd 4 shh\nodd 11 zoo\nyeti 7 flap\njun 6 pat\njun 13 wha\nlinum 6 rotas\nspots 11 dazed\nslip 9 bury\nwet 10 god\nlo 3 or\noho 1 pip\noho 13 bub\neau 10 oke\nban 4 fer\nbog 6 hum\ngad 8 oil\nghat 13 tung\nup 11 fa\noxim 6 udos\nurea 13 hern\ntog 12 fas\nbo 3 er\nbo 12 na\nones 13 barf\ngowk 8 owes\ngolem 6 murks\nel 3 ho\nel 9 nu\nwee 10 goo\nnoh 6 tun\nfogs 12 rase\nalp 3 dos\ncol 3 fro\nhas 8 pia\noft 12 arf\npixy 3 slab\nnill 6 torr\nin 1 jo\ngum 6 mas\nire 9 ran\neaux 10 okeh\ncoy 12 oak\narf 3 dui\nbrie 9 karn\njohn 6 punt\nvat 8 dib\nshog 12 etas\numps 12 gybe\ners 9 nab\ners 13 ref\nquey 6 wake\nsir 9 bra\ngobs 12 sane\nbyte 10 lido\noe 4 si\nhints 11 styed\nais 6 goy\nnu 6 ta\nnu 13 ah\nfin 6 lot\nhun 10 rex\nfen 10 pox\ndrab 3 gude\nsub 6 yah\ngummy 6 masse\nglib 3 jole\nloch 6 ruin\ncede 10 mono\nhat 4 lex\nail 6 gor\ndor 12 pad\npep 4 tit\nlug 6 ram\nfeed 10 poon\nrat 4 vex\nrat 13 eng\nuredo 10 ebony\nnil 6 tor\nnil 7 ups\nfirs 12 rude\npelt 3 show\nah 1 bi\nah 4 el\nah 7 ho\nah 13 nu\nanteed 1 bouffe\netch 11 pens\nlimy 6 rose\nmanful 7 thumbs\nfils 6 lory\nbyre 9 khan\nhuff 10 repp\nknur 7 ruby\nsent 13 frag\nefs 9 nob\nokeh 4 soil\ngor 12 sad\ntot 7 ava\nwombs 6 cushy\ndaw 8 lie\nlop 3 ors\ngnat 13 tang\ndash 11 olds\ngun 6 mat\nmoa 12 yam\nlane 4 peri\nlane 7 shul\nfur 6 lax\nfur 13 she\nape 11 lap\nterra 13 green\nset 10 cod\nlaw 4 pea\nlaw 8 tie\nbanjo 4 ferns\nonyx 13 balk\nsire 9 bran\nels 2 gnu\nels 9 nub\nelds 9 numb\nego 8 mow\nex 3 ha\nex 10 oh\nex 11 pi\nabet 7 hila\ntho 10 dry\ndanio 4 herms\nyaw 8 gie\nfir 6 lox\nfir 9 ora\norc 12 ado\nberg 9 knap\nbys 6 hey\nfry 13 sel\nlie 9 urn\nawa 12 mim\nlallan 4 pepper\nphew 7 wold\njob 12 van\npulpy 6 varve\nins 1 jot\ncry 2 eta\ncry 3 fub\npas 4 tew\nta 7 ah\nta 8 bi\nta 11 el\nbat 8 jib\nkor 12 wad\nto 1 up\nto 12 fa\neng 1 foh\neng 4 irk\neng 13 rat\ngib 12 sun\ndex 10 noh\negg 8 moo\nben 4 fir\nben 10 lox\nben 13 ora\naga 4 eke\nwit 6 coz\nquay 6 wage\nphi 7 wop\nsera 4 wive\nwiles 6 corky\nits 1 jut\nits 11 ted\navo 5 fat\navo 13 nib\nna 4 re\nna 13 an\npap 11 ala\nriff 12 durr\nays 6 gey\nno 1 op\ngoby 12 sank\nwhir 7 dopy\ndig 12 pus\ntas 11 eld\nizar 1 jabs\nerg 9 nap\nerg 13 ret\nrum 2 two\ndog 12 pas\nbub 6 hah\nbub 13 oho\ndel 4 hip\nkaes 8 sima\nzoa 6 fug\nzoa 12 lam\noar 8 wiz\ndah 8 lip\nhyp 2 jar\ngul 6 mar\ngul 13 thy\nordo 5 twit\net 7 la\net 10 od\net 11 pe\nas 12 me\nboo 3 err\nmuumuu 10 weewee\non 6 ut\non 13 ba\nfun 6 lat\nohm 1 pin\nohm 6 uns\naha 1 bib\naha 13 nun\nambo 12 myna\nsteer 1 tuffs\nant 11 lye\nant 13 nag\npull 4 typp\ndes 1 eft\ndrips 11 octad\nbet 4 fix\nribs 12 dune\nere 3 huh\nruddy 10 benni\nprimero 3 sulphur\nwolf 6 curl\nrem 10 bow\noka 10 yuk\ntip 9 cry\ntip 11 eta\ntip 12 fub\nfang 4 jerk\npat 7 wha\npat 11 ale\nmod 12 yap\nlog 6 rum\nlog 8 two\nan 1 bo\nan 4 er\nan 13 na\nfuji 10 pets\nhae 4 lei\nluau 6 raga\nhen 11 spy\nseed 10 coon\nfills 6 lorry\nhew 7 old\ndoff 12 parr\ndeer 1 effs\nsalp 4 wept\nwis 6 coy\ner 9 na\ner 13 re\nurd 9 dam\nsea 8 ami\ndye 2 fag\ntut 7 aba\nai 4 em\nai 6 go\nai 12 mu\nlap 3 ods\nlap 4 pet\nrear 13 erne\nsew 10 cog\ntypy 2 vara\nroof 13 ebbs\ncedi 10 mons\ninkier 7 purply\nmis 6 soy\ndid 12 pup\ncuss 12 ogee\npsst 12 beef\njuju 6 papa\nginny 6 motte\ntau 11 elf\nfa 3 id\nspit 11 date\nlux 6 rad\nchat 13 pung\ngnar 1 hobs\nhob 12 tan\ntahr 7 ahoy\nnutty 6 tazze\nwits 6 cozy\ngo 6 mu\ngo 8 ow\nups 11 fad\npyic 2 rake\nlang 4 perk\nlang 7 shun\nrah 8 zip\nnulls 6 tarry\ncalk 8 kits\nfas 4 jew\nill 3 loo\npenny 13 craal\nzee 1 aff\nzee 9 inn\npar 7 why\nbiffs 6 holly\nat 4 ex\nat 7 ha\nbop 3 ers\nbop 12 nab\njeed 10 toon\nwad 12 imp\ncord 3 frug\nsix 6 yod\ngulfs 6 marly\nby 2 da\nby 6 he\nby 7 if\nby 10 li\ncubed 10 melon\nhoys 12 take\nleu 10 voe\nuts 11 fed\nfolk 3 iron\nlutea 4 pyxie\noafs 6 ugly\nfons 12 raze\nelk 9 nut\nbun 6 hat\nbun 10 lex\nsetal 8 ambit\nnay 4 rec\nshh 7 zoo\nceil 4 gimp\nriver 9 arena\npily 3 slob\nkoas 12 wame\nsims 8 aqua\nlean 4 pier\nof 12 ar\nlawn 4 pear\nlad 8 til\nwolfs 6 curly\nyom 12 kay\neat 8 mib\norra 13 been\negad 8 moil\npet 11 ape\nmu 2 ow\nmu 10 we\ngoa 6 mug\nhop 12 tab\ndidos 12 pupae\nsee 10 coo\nnib 13 avo\ndrib 9 mark\nrib 9 ark\nrib 12 dun\nbib 12 nun\nbaa 4 fee\nmud 10 wen\nfizzy 5 kneed\njobs 12 vane\ncrib 9 lark\neche 6 kink\nham 8 piu\npuls 6 vary\nfido 5 knit\nslag 2 unci\nifs 9 rob\nhe 1 if\nhe 4 li\nsulk 8 acts\ncot 12 oaf\nhim 6 nos\nhim 7 opt\nbut 10 led\nmom 12 yay\nhem 10 row\npeed 10 zoon\nazo 5 fet\nduly 10 nevi\nhes 10 roc\njoey 6 puke\nyay 8 gig\nalkyd 4 epoch\nwow 8 ewe\ncreel 13 perry\nhide 11 stop\nads 1 bet\nads 5 fix\npops 12 babe\noxter 7 vealy\nbus 6 hay\ngale 4 kepi\nauk 2 cwm\ndom 6 jus\ndom 12 pay\nsemi 10 cows\neld 3 hog\nerrs 13 reef\neta 1 fub\nana 1 bob\nana 4 ere\nana 7 huh\ntung 13 ghat\nbeg 13 ort\ntsk 8 bas\ntsk 12 few\naah 4 eel\ncans 8 kiva\nsos 8 awa\npee 3 shh\npee 10 zoo\nwin 6 cot\nnot 5 sty\nkos 12 wae\nvox 6 bud\nvox 12 haj\ngirl 9 prau\ndol 12 pax\nbig 12 nus\nnisi 6 toyo\nchain 6 ingot\nbum 6 has\njura 13 when\nliny 6 rote\ngym 12 sky\naw 12 mi\npye 2 rag\nos 12 ae\njeu 10 toe\nlax 7 she\nkat 8 sib\nerne 13 rear\ngnu 7 nub\nadd 1 bee\nadd 8 ill\nadd 11 loo\ngoys 12 sake\nbombyx 6 hushed\nray 8 zig\nreed 10 boon\ncub 10 mel\nput 10 zed\nlater 7 shaly\nuta 7 bah\nxi 6 do\nxi 11 it\nfigs 12 ruse\noat 4 sex\noms 12 aye\ncold 3 frog\nidem 10 snow\nnae 4 rei\nnae 8 vim\nspic 9 byrl\ndoxy 3 grab\nef 3 hi\nef 9 no\nef 10 op\nret 10 bod\nret 13 erg\ngin 6 mot\noak 8 wis\njiffs 6 polly\nsag 12 ems\nploy 3 sorb\ntorus 12 fadge\npiny 6 vote\nflu 9 oud\nmir 6 sox\ngoad 12 samp\nho 6 nu\nho 12 ta\nahem 7 holt\nhah 7 oho\nhah 8 pip\nthen 11 espy\nlatex 7 shale\nsawn 4 wear\nfad 8 nil\nmumms 6 sassy\ncrop 3 furs\nmolt 3 prow\ndawn 4 hear\ngids 12 supe\nsic 2 uke\nhut 10 red\nsteeds 1 tuffet\nash 12 met\nhern 13 urea\ntag 8 bio\neff 9 noo\nhade 11 slop\nopal 4 step\ngulf 6 marl\nasp 2 cur\nmun 6 sat\nilex 9 rung\nnome 6 tusk\nboff 6 hull\namu 2 cow\nkhan 8 spiv\nwyle 2 yang\nid 11 to\nid 12 up\nyah 8 gip\nmolas 6 surgy\nwiny 6 cote\nnavy 13 anil\netui 10 odes\ntor 1 ups\ntor 12 fad\ncum 10 mew\nwhew 10 grog\nkoa 4 ose\nmuff 6 sall\nowl 4 sap\nowl 8 wet\njib 6 poh\nbox 3 era\nbin 6 hot\nbin 13 ova\npod 11 azo\nre 9 an\nre 10 bo\nre 13 er\nnix 6 tod\npun 6 vat\nvav 8 did\npele 4 tipi\npent 13 crag\ntsars 8 baiza\ntall 8 bitt\nuse 8 cam\nadds 1 beet\nugh 8 cop\nants 1 bout\nsplits 11 dawted\npe 3 sh\npe 4 ti\ndud 1 eve\nspits 11 dated\nbeef 10 loop\nde 1 ef\nde 4 hi\nde 10 no\nde 11 op\nfet 10 pod\ntab 11 elm\nrid 9 arm\nrid 12 dup\ncapo 4 gets\ndido 12 pupa\nelm 3 hop\nsneer 1 toffs\ndols 6 jury\nenvy 13 rail\ncheer 7 jolly\nser 10 cob\nask 2 cum\nask 12 mew\nif 3 li\nes 8 ma\nnap 4 ret\nlac 4 peg\nado 5 fit\nzebu 7 glib\nzebu 10 jole\npunk 4 tyro\ntry 13 gel\nsal 8 ait\nmocha 6 suing\nwily 6 core\nanil 13 navy\nchef 13 purs\nhub 7 obi\nskua 8 asci\nit 7 pa\nnip 9 wry\nsmog 12 eyas\nhark 4 levo\ndin 5 ins\ndin 6 jot\ngat 4 kex\nmus 6 say\neye 2 gag\nguff 6 mall\nchar 1 dibs\nfoys 10 pyic\nfoys 12 rake\nhep 4 lit\nhep 11 spa\nyen 7 flu\nspiv 9 byre\nars 9 jab\nmeet 10 wood\ngod 8 owl\ngod 12 sap\nlum 6 ras\npean 4 tier\nhin 6 not\nhin 11 sty\nfizz 5 knee\nspat 11 dale\nimp 2 kor\ntee 7 all\nweet 10 good\nlar 7 shy\nivy 6 obe\nbeen 13 orra\ndak 8 lis\neses 8 mama\nmilt 3 plow\nwile 6 cork\neh 7 lo\neh 10 or\ngab 4 kef\nadder 1 beefs\npac 4 teg"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-4108530735",
  "source": {
   "name": "exercise 12.1",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/most_frequent.py>.\n",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/most_frequent.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Add the following to your code after your `most frequent` function:\n\n    def make_histogram(s):\n        hist = {}\n        for x in s:\n            hist[x] = hist.get(x, 0) + 1\n        return hist\n    \n    def read_file(filename):\n        return open(filename).read()\n\n    if __name__ == '__main__':\n        string = read_file('emma.txt')\n        letter_seq = most_frequent(string)\n        for x in letter_seq:\n            print(x)\n\nThen submit your code by clicking the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "e\nt\na\no\nn\ni\ns\nr\nh\nd\nl\nu\nm\n\n\ny\nc\nw\nf\ng\n,\nb\np\n.\nv\n-\nk\n\"\nI\nM\n;\nH\nE\nx\nW\nT\n'\n!\nS\nq\nA\n_\nj\nC\nB\n?\nF\nY\nJ\nK\nO\nN\nP\nD\nR\nG\n:\nz\nL\n)\n(\nV\n`\n*\nU\n0\nX\n2\n1\n]\n[\nQ\n9\n3\n8\n/\n6\n@\n7\n5\n4\n&\n%\n~\n=\n#"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-182473468",
  "source": {
   "name": "exercise 12.3",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/metathesis.py>. ",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/anagrams.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Have your code print each pair on a line with a single space in between. Then submit your code using the button below:\n",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "wanders wardens\ncumin mucin\ndales lades\ndeals leads\nlades lased\nnap pan\nrosters sorters\nbike kibe\ngame mage\ncarbon corban\ngirn grin\nmonisms nomisms\nbaals balas\nbalas balsa\nbalas basal\nbruins burins\napes apse\napse pase\napse spae\ncalkers lackers\nmutular tumular\nalgors argols\ndogs gods\nlisting silting\ncouthiest touchiest\nloiter toiler\ntartlet tattler\ncark rack\nsliping spiling\ncosy coys\ncusks sucks\nlustring rustling\nconking nocking\ncarers racers\nflair frail\nexcepted expected\nkeel leek\naltruisms ultraisms\ndoor odor\ndoor rood\nliver livre\nliver viler\ncorkiest rockiest\nmanes manse\nmanes names\nmanse mensa\nnames nemas\nates etas\neast eats\neats etas\neats sate\netas teas\nsate seta\nseat seta\nseat teas\nrecrated retraced\nretraced terraced\ndealers leaders\nloess loses\nloses soles\nsloes soles\nalumin alumni\namirs mairs\ndent tend\nalgum almug\npeins penis\npenis pines\nsnipe spine\nfret tref\nmires miser\nmires rimes\nakin kain\ntetanies tetanise\nexcept expect\nanchors archons\nderries redries\nderries serried\ndesirer resider\ncarted crated\ncrated traced\ncalque claque\ndawdled waddled\ntardier tarried\nmemo mome\nslimed smiled\nmolarity morality\nmarbled rambled\ndowel lowed\nrouting touring\nspites stipes\nkay yak\nnettiest tentiest\ncentos contes\nlore role\norle role\nlaves vales\nsalve slave\nsalve valse\nvales valse\ntasset tastes\nsomberly sombrely\nkale lake\ncertifier rectifier\nmiriest rimiest\nhuddler hurdled\nlappers rappels\nasp sap\npas sap\nsap spa\ntartlets tattlers\nroues rouse\ncerates creates\nwarstles wrastles\ndallier rallied\nconserve converse\nindented intended\nboar bora\nsuably usably\nhones hosen\nhones nohes\nfoal loaf\nemprises impreses\nlowers rowels\nhegaris hegiras\nsots toss\ntimber timbre\nfoals loafs\ndesires resides\nmitten titmen\nable bale\nbale blae\nrues ruse\nrues suer\nruse sure\nsuer sure\nsuer user\npaws waps\nwaps wasp\nintros nitros\nhide hied\nanil nail\nlain nail\nemprise imprese\npremies premise\nmangels mangles\nlowering roweling\nhasped pashed\nphased shaped\ndame made\njust juts\nactins antics\ntactics tictacs\ngustiest gutsiest\nbasins sabins\nmense mesne\ncarols corals\noutrides outsider\ndealer leader\npodites posited\nposited sopited\nleaviest vealiest\neery eyre\neyer eyre\nrimples simpler\nailments aliments\nsir sri\nhalloo holloa\nabodes adobes\narrest rarest\ntarres terras\nmirier rimier\nloping poling\nclosest closets\ncod doc\nfile life\nlief life\nbayadeers bayaderes\nquais quasi\ndarling larding\ntow two\ntow wot\ndispel lisped\nsliped spiled\nnuns sunn\nrepined ripened\nenisled ensiled\nalders laders\nhankers harkens\ncertifies rectifies\ndink kind\nsalons solans\ngird grid\nhast hats\nleavier vealier\npoured rouped\nain ani\nburier rubier\ndey dye\ndodder rodded\nmoot toom\nliveness vileness\nluring ruling\nmating taming\nhangs sangh\nilly lily\nlily yill\nmonarchs nomarchs\ndearies readies\ncruds curds\ngar rag\nrecused secured\nreduces seducer\ngut tug\nwarner warren\ngluer gruel\naldols allods\nservos versos\nfibers fibres\ngel leg\nabode adobe\nquartes quatres\nclod cold\ndoty tody\ndesiring residing\nscaping spacing\nburied rubied\nsigners singers\nliters litres\nliters tilers\nconcerting concreting\nappal papal\ndormancies mordancies\nbluest bluets\nbustle subtle\nfreers freres\nspates stapes\nkeen knee\nseem seme\nworst worts\nsetting testing\nceratins creatins\ngory gyro\natoms stoma\nleasing sealing\nbogans gobans\ndiets dites\ndites sited\ndites tides\nsited stied\nsnooped spooned\nlooting tooling\nrays ryas\ncarvings cravings\nany nay\nlave leva\nlave vale\nleva vela\nvale vela\nveal vela\nresin risen\nresin serin\nrisen siren\nserin siren\ndemies demise\narcked racked\ncarked racked\ndacker racked\naerology areology\nnetted tented\npythonic typhonic\ncastes cestas\neloins oleins\nbugled bulged\naltruism ultraism\nagin gain\nacid caid\ncadi caid\ntaste testa\nteats testa\nkytes tykes\nbarrettes berrettas\nappel apple\nsnatch stanch\nariled railed\nlaired railed\nweird wried\nwider wired\nwired wried\ngaddis gadids\nwield wiled\nnuclear unclear\nnave vane\nvane vena\nreleased resealed\nhaptenes heptanes\nlien line\norcs rocs\nbidder birded\nshote those\nphis ship\npits tips\nspeiring spiering\navo ova\nabying baying\nretires retries\nretries terries\noverdoes overdose\ntew wet\nleaden leaned\nanna nana\ndear read\nmonologies nomologies\nbriskest briskets\ncarves craves\ndairy diary\ndairy yaird\nforth froth\nskirts stirks\nthorned throned\nranges sanger\ncopula cupola\npiled plied\noutguns outsung\nput tup\ndiffer riffed\ncaptions pactions\npasty patsy\nenrol nerol\nos so\ngirth grith\ndecker recked\nleased sealed\ncalm clam\ndot tod\nveto vote\nfarmer framer\nwaist waits\nnolos solon\nsettees testees\ndeflower reflowed\ncarp crap\nsorites sorties\nlute tule\nsleety steely\ndented tended\nmonology nomology\ndevon doven\ndefacer refaced\nfool loof\ndears reads\nasker eskar\nasker saker\nrakes saker\narise raise\nlist lits\nlist silt\nlits tils\nsilt slit\nsilt tils\nfurs surf\nprao proa\nbarely barley\ndemander remanded\ndinkly kindly\noat tao\ncalked lacked\nicecaps ipecacs\nripplets tipplers\nexist exits\ndents tends\nnaiver vainer\nshader shared\nslipes spiles\nspeils spiels\nspiels spiles\ncadaster cadastre\npeer pere\npeer pree\npere pree\nbedrug redbug\ncoder cored\nalow awol\nlurers rulers\nbud dub\nreeving veering\neloin olein\nperformed preformed\npetit petti\ndealings leadings\nberating rebating\nsleeps speels\ndibber ribbed\nstaw swat\nswat twas\ntaws twas\ntaws wats\nwast wats\nloped poled\nbahts baths\ncombat tombac\nargon organ\ngroan organ\nslates stales\nfaro fora\nnouses onuses\ndeaden deaned\nlustred rustled\nacts cats\ncast cats\nschemers schmeers\nsild slid\ntoady today\nlati tali\ntail tali\nhankering harkening\nhasping pashing\nphasing shaping\nmonism nomism\ngrummest grummets\nducker rucked\ncaused sauced\nrootlet tootler\nrussets tussers\nlose sole\nsloe sole\nnipa pina\npain pian\npian pina\nfealty featly\nkino oink\nmillimhos milliohms\nfirers friers\nsnatcher stancher\nsotols stools\nrochets tochers\nrotches torches\ntorches troches\ndaw wad\nannas nanas\ndenser sender\nportended protended\nstaccato stoccata\nmoor room\ngelated legated\ncantor carton\ncarton craton\nlacey lycea\nplaint pliant\ndole lode\nmildness mindless\nduo oud\nduo udo\nsputa stupa\nfarmable framable\ncertitude rectitude\nhomage ohmage\nmolar moral\nnonrival nonviral\nservants versants\nganging nagging\ncerated created\nsceptral spectral\ncoal cola\ncola loca\nlivest vilest\nlime mile\neludes leudes\ncoude douce\ndiopters dioptres\ntumbler tumbrel\nkeep peek\npeek peke\nmarbles rambles\nbeen bene\nimpure umpire\nreiver riever\nrepiners ripeners\ngames mages\ntarre terra\nseems semes\nendue undee\nbarns brans\nalmas lamas\ncreepy crepey\nserver verser\nfiber fibre\ncurtesy curtsey\ncertified rectified\nloiters toilers\njatos jotas\nbody doby\ndined nided\nkaon koan\norc roc\nadze daze\nmho ohm\ngayer yager\nskean sneak\nsalvers slavers\nlotus louts\nlotus tolus\nray rya\nray yar\nbard brad\nbard darb\nbrad drab\ndarb drab\nopt pot\npot top\ncarpels parcels\ncruets curets\ncruets eructs\neructs truces\nrectus recuts\nnotal tonal\ntalon tolan\ntolan tonal\nsalves slaves\nsalves valses\ncarped craped\nactin antic\nreeky rekey\npraos proas\nderry redry\nvalor volar\ndeformer reformed\ncervices crevices\nboles lobes\ngaol goal\nsatins stains\nrousing souring\nhey yeh\ngenets gentes\nconserves converses\nlooters toolers\nbase sabe\ngamic magic\nseers seres\ndecenter decentre\ncaliber calibre\npixys pyxis\nthaw what\nunleased unsealed\nambers embars\nweiner wiener\nsawyers swayers\nclods colds\nkays yaks\ncaries cerias\nsanity satiny\nbugler bulger\nsang snag\nlimpest limpets\npedicels pedicles\nretrain terrain\nism sim\nmis sim\ncion coin\ncion icon\ncoin coni\narcing racing\ncaring racing\npile plie\ndigger rigged\nceruse recuse\nrecuse secure\nflour fluor\ncastor costar\nbeers brees\nhalloos holloas\nlitter tilter\ndiol idol\ndine nide\nwander warden\nwarden warned\nhop poh\nbomber mobber\nbionic niobic\nribbon robbin\nlapsing sapling\nsnoopily spoonily\nsix xis\nportend protend\ndoser rosed\nrenigs resign\nsigner singer\nepoxide epoxied\npries prise\nspeir spier\nspier spire\nclaps clasp\ncutesy cuteys\ncaramels ceramals\nrecrates retraces\nretraces terraces\nregelating relegating\ndenting tending\ngirding griding\nhops soph\nposh soph\ndrugged grudged\narid raid\nrilles siller\ndawdler waddler\nlaterite literate\nat ta\naccouter accoutre\nrepiner ripener\nbin nib\nbecrust becurst\nunrobes unsober\nmeeter teemer\nsnoopiest spooniest\ndicker ricked\nnary yarn\nmeters metres\nmeters retems\nspirts sprits\nspirts stirps\nsprits strips\nstirps strips\nfreer frere\ndeckel deckle\nbotanies botanise\nfico foci\naliens alines\nsaline silane\nhardest hardset\nmantels mantles\ndobber robbed\nnewt went\nenisles ensiles\nphases shapes\nawny wany\ndearer reader\ndearer reared\nreader reared\nredear reread\npastiche pistache\npare rape\npear reap\nteazels teazles\nsalines silanes\nfakir kafir\nburbly rubbly\nalder lader\nwirer wrier\nskip spik\ntheories theorise\nminister misinter\nburblier rubblier\nsneaping speaning\nbases sabes\nbolsters lobsters\nroset rotes\nrotes tores\ntores torse\nnipas pinas\npains pians\npians pinas\nblot bolt\nlunar ulnar\ngushed sughed\nconk nock\ners res\nres ser\nsprite stripe\nfarting rafting\nhirsel hirsle\npasties patsies\nmoors rooms\nexcepts expects\nhallooed holloaed\nraw war\nmonogram nomogram\nratines retinas\nretains retsina\ntalons tolans\nenology neology\naskers eskars\naskers sakers\ndiet dite\ndiet tied\ndite tide\ntide tied\nnips pins\nsnip spin\nsue use\nstars tsars\ntrass tsars\nkue uke\ndawdles waddles\nlepers repels\nthickest thickets\nthickest thickset\ntrying tyring\ndesigner resigned\ncompeer compere\npoises posies\npated taped\ngelate legate\nmarbler rambler\ndetainer retained\nmanses mensas\nmensas messan\nrecrate retrace\nretrace terrace\nhandles handsel\nstrait strati\ncorked rocked\ndocker rocked\nmidden minded\nparers rapers\noar ora\ndecanter recanted\narcking racking\ncarking racking\namnic manic\nteazel teazle\ntory troy\ntory tyro\nhassels hassles\ncertifiers rectifiers\nploys polys\nbromo broom\ndei die\ndongolas gondolas\nlimbate timbale\narias raias\nrun urn\ncalk lack\nskirret skirter\nacnes canes\nam ma\ngirds grids\ncruses curses\ncurses cusser\ncarting crating\ncrating tracing\nredears rereads\nneves seven\nsawer sewar\nsewar swear\nspeiling spieling\ngelates legates\ndor rod\nclots colts\ncomets comtes\nshrieks shrikes\nmappers pampers\nflours fluors\nradicel radicle\ncodes coeds\nmate meta\nmate tame\nmeat meta\nmeat team\nrusine ursine\nperforming preforming\ncarol coral\nsnaps spans\nclot colt\nawned waned\ndawen dewan\nskeets steeks\nbards brads\nbards darbs\nbrads drabs\ndarbs drabs\nabas baas\nrato rota\nrato taro\nrota tora\ntaro tora\nfiler flier\nfiler lifer\nmoorier roomier\nlier lire\nlier riel\nlire rile\nriel rile\nantes nates\nwarners warrens\nsleetiest steeliest\naria raia\ndeifying edifying\noot too\nnet ten\nrouser sourer\nchams chasm\nclutch cultch\npythons typhons\nhist hits\nhits sith\nshit this\nhitting tithing\nstair stria\ndah had\nnaves vanes\nlewd weld\nrennets tenners\ncorky rocky\ngins sing\nsign sing\nretry terry\nsail sial\nwhist whits\nmucor mucro\nleaved vealed\nhassel hassle\naltitudes latitudes\ndeucing educing\nfluty fluyt\ndams mads\ndrugging grudging\ner re\ncaestus cuestas\nweirs wries\nwires wiser\nwires wries\nscapes spaces\nsigned singed\nsanies sansei\ntriacid triadic\ntorses tosser\nsetter tester\ncerate create\nbar bra\nrowdiness wordiness\nmopes pomes\npoems pomes\nrevest revets\nverset verste\narmet ramet\nmater tamer\nramet tamer\nsends sneds\nsaltiers saltires\npastiches pistaches\nalt lat\nseater teaser\ncine nice\ninched niched\ndoglike godlike\ncauser saucer\ntheaters theatres\nstaccatos stoccatas\ndomal modal\ndale lade\ndeal lead\npaly play\nbuds dubs\nburbles rubbles\ncoinfer conifer\nlurer ruler\nbemiring beriming\nhelios holies\ndims mids\nrattly tartly\nputs tups\ncassocks cossacks\nfart frat\nfart raft\ndune nude\nnude unde\nshriek shrike\ncap pac\npesos poses\nposes posse\nsigns sings\nsabers sabres\nnu un\nretail retial\ngels legs\ngilder glider\nsnapless spanless\ndeifies edifies\ncassock cossack\ncoroner crooner\ndon nod\nboars boras\nbeys byes\nvailed vialed\nlit til\nlooted tooled\ncomplaint compliant\nnut tun\nfreshest freshets\nhomages ohmages\nhirsels hirsles\nmeagerly meagrely\ndeify edify\ndangers ganders\nganders gardens\nferrying refrying\namain amnia\namnia mania\nbareges bargees\nquinnats quintans\ncannot canton\nawns wans\nsawn swan\nsnaw swan\ndarns nards\nnards rands\neses sees\npis psi\npis sip\nlewder welder\nthews whets\nsiped spied\ndooms moods\nmelodies melodise\nlatrines ratlines\ndaws wads\npartans tarpans\ntarpans trapans\ndorps drops\ndrops prods\nphase shape\nmaneges menages\ntarries tarsier\nresetting retesting\ninsouled unsoiled\nfools loofs\nceder cered\ncered creed\ndoors odors\ndoors roods\ngushing sughing\nbores robes\nrobes sober\nfisting sifting\narco orca\ndecenters decentres\ndues sued\nsued used\nbelt blet\nper rep\nfaltboat flatboat\nrattans tartans\nglover grovel\nbasis bassi\nduffer ruffed\ngink king\nelegist elegits\nwarstled wrastled\nsilly slily\nsilly yills\nbury ruby\ncarve crave\nanils nails\nslain snail\nane nae\nlost lots\nparton patron\nparton tarpon\nevils veils\nrackets tackers\nringlet tingler\nlei lie\nrewon rowen\ndap pad\noutput putout\nsalved slaved\nmerises remises\nsnoop spoon\nperform preform\nbast bats\nbats tabs\nportending protending\nbey bye\nconserved conversed\ngirns grins\nboor broo\ncopulas cupolas\nhankered harkened\ndeuces educes\nlevin liven\ndim mid\nsleetier steelier\ngallate galleta\ngallate tallage\nregelates relegates\ncaramel ceramal\ndesirers residers\nroust routs\nrouts tours\ntorus tours\ncallers cellars\nlatent talent\nruffes suffer\nloss sols\nboast boats\nlentil lintel\nregelate relegate\nreserves reverses\ncasually causally\nberated rebated\ndebater rebated\nindent intend\nlameness maleness\nlameness nameless\nmaleness maneless\nmaneless nameless\nburying rubying\ngast gats\ngats tags\namins mains\nstrongly strongyl\nmost mots\nmots toms\ndags gads\ncoden coned\nkinos oinks\naltar artal\nartal ratal\nruinates urinates\nuranites urinates\nendues ensued\nrebus rubes\nrubes suber\nrain rani\nshoers shores\nwaiver wavier\nmonos moons\nmonos nomos\nknops knosp\nfair fiar\ndawdling waddling\ncoast coats\ncoats costa\nstows swots\nassertors assorters\nreserver reverser\nseeking skeeing\ndols sold\nere ree\ndrupes prudes\ndog god\nevery veery\ndoorless odorless\nkeeping peeking\nburbliest rubbliest\negest geest\nkiltings kitlings\nnuts tuns\nmons noms\nocher ochre\npours roups\nsawyer swayer\nlitters tilters\nsae sea\nnow won\nown won\ntantaras tartanas\nsolus souls\nclanged glanced\noust outs\nlases sales\nloops pools\npolos pools\nsloop spool\nbuns nubs\nberaking breaking\nghast ghats\nretrains terrains\ndeduces seduced\nceruses recuses\nrecuses secures\nnip pin\nsave vase\ncuds ducs\nstarets staters\ndyker ryked\ncohering ochering\nsilvering slivering\ndunes nudes\nhallos hollas\ncrus curs\npercents precents\nfeeling fleeing\nbust buts\nbuts tubs\nloved voled\nayes eyas\neyas yeas\ncups cusp\ndesex dexes\ndexes sexed\ncipolin picolin\nsalutes taluses\ntetracid tetradic\nalgins aligns\ncafes faces\nceratin certain\nceratin creatin\ndeifications edifications\nexcides excised\ndidoes diodes\nskeens skenes\nserving versing\ndapper rapped\npresetting pretesting\ngodling lodging\ncider dicer\ndicer riced\nmateless tameless\nbugling bulging\nomber ombre\npay pya\npay yap\nwist wits\nconks nocks\nresins serins\nserins sirens\nessoin ossein\nnoesis noises\nchares chaser\ncero core\npercepts precepts\naptness patness\nhitters tithers\nobserves obverses\nwides wised\nlivers livres\nsilver sliver\nlawing waling\namines animes\norts rots\nrots tors\nsort tors\nglovers grovels\ncorkier rockier\nbest bets\ndup pud\nacre care\ncare race\nungual ungula\nhalloing hollaing\naal ala\nfemur fumer\nbedrugs redbugs\nburden burned\nsleeted steeled\ngaddi gadid\nforamen foreman\nalters artels\nartels ratels\nlaster salter\nsalter slater\nslater staler\nstaler stelar\ncoals colas\ndashes sadhes\ndashes sashed\nsadhes sashed\nstades tsades\nalb lab\nbal lab\ndors rods\ndors sord\nfere free\ndeuced educed\naxels axles\nsuing using\ngirt grit\ngrit trig\ndolt told\nkeisters kiesters\nkittel kittle\ninfarcts infracts\nepos opes\npeso pose\nbestud busted\nmated tamed\nglans slang\ngam mag\npotstone topstone\nscepters sceptres\nscepters specters\nsceptres spectres\nspecters spectres\nrating taring\nfired fried\nburbled rubbled\nelk lek\nmisdealing misleading\ndoss sods\nleaping pealing\nmisdeals misleads\nfilters lifters\ngusty gutsy\npate tape\ntape tepa\nloop pool\npolo pool\nleered reeled\ncusk suck\nquickest quickset\nlinos lions\nlions loins\nloins noils\nfates fetas\nfeast feats\nfeats fetas\ngamblers gambrels\nspeirs spiers\nspiers spires\nbarky braky\ngarment margent\nmhos ohms\nohms shmo\nvail vial\nmates satem\nmates tames\nmeats teams\ndarn nard\nnard rand\nferry refry\nliers riels\nriels riles\nbat tab\nlemons melons\nsirs sris\ndoats toads\nare era\near era\npedicel pedicle\ntreaties treatise\nrootlets tootlers\nnickels nickles\nbadger barged\nbarged garbed\nbredes breeds\nkarst karts\nfoetor footer\nspader spared\nekes skee\nseek skee\ntiro tori\ntiro trio\nincudes incused\nincudes induces\nroses sores\nreagins regains\nhoops poohs\nrhesus rhuses\nprides prised\nspider spired\nboring robing\norbing robing\nevil veil\nlive vile\nbarked braked\nwadder warded\ntiter titre\nkaes keas\ncubist cubits\nlasted salted\nsalted slated\nslated staled\npalest palets\nreleasing resealing\npart prat\npart rapt\npart tarp\nprat trap\ntarp trap\nplasmic psalmic\nsow wos\nlimestones milestones\ncost cots\npython typhon\noutputs putouts\naba baa\ndemo dome\ndome mode\nliter litre\nliter tiler\nearns nares\namber embar\nmolarities moralities\nnarking ranking\nwader wared\nmonistic nomistic\nbrag grab\ngarb grab\ncostumers customers\npuss sups\nnoteless toneless\npouring rouping\nlemon melon\nstory stroy\npercept precept\ntost tots\nmotets mottes\nmotets totems\nriatas tiaras\ndunged nudged\ngelating legating\nweiners wieners\nmelton molten\nsatirists sitarists\nfain naif\ncorkers rockers\nlin nil\nrogues rouges\ntilting titling\nstow swot\nswot twos\ntows twos\ntows wots\nwost wots\narses rases\nguls lugs\nnisus sinus\ngest gets\ngets tegs\ngnus guns\ngnus snug\nguns sung\nsnug sung\nombers ombres\nsomber sombre\nspue supe\nparesis parises\nparises praises\nlas sal\nvies vise\nblurs slurb\nloden olden\nbad dab\nables bales\nkrait traik\nmarbling rambling\ndiddler riddled\nmay yam\nhaslets hatless\nsigning singing\nresow serow\ncithern cithren\nbored robed\norbed robed\nservers versers\nsnatched stanched\nsleeting steeling\nbestrid bistred\nquarte quatre\nleasers sealers\ntriacids triadics\nact cat\ndormant mordant\nfarmers framers\ncorker rocker\nmono moon\ndens send\nsend sned\nrennet tenner\naltruist ultraist\nphilter philtre\nbaht bath\napsis aspis\nsnatches stanches\ndelayer relayed\nentires entries\newes wees\nwake weka\nweak weka\ncaste cesta\ncates taces\nore roe\npars raps\nraps rasp\nmire rime\nregimes remiges\nparting prating\nbarn bran\ncarks racks\npees seep\ndone node\nmoory roomy\nrate tare\ncasques sacques\ngals lags\ngarret garter\ngarter grater\ndeliver relived\nrelived reviled\nplasm psalm\ncouth touch\norb rob\nassertor assorter\ngas sag\nmir rim\nmutuel mutule\ngul lug\nacned caned\nginks kings\nredden rended\nfist fits\nfist sift\nmays yams\ndimmer rimmed\ncarter crater\ncrater tracer\nindents intends\ndost dots\ndots tods\ngelds gleds\nrout tour\nbelts blets\nblest blets\nrusset tusser\nlips lisp\nhoar hora\nmacaber macabre\nsetters testers\npules pulse\nbedlams beldams\nhoes hose\nmarquess masquers\naloft float\nfloat flota\nlotas tolas\ngelations legations\nnetting tenting\ngnu gun\nlatches satchel\nbass sabs\ngaps gasp\nlimitary military\ncausing saucing\nelectors electros\nnetter tenter\nsolitaires solitaries\ncompiled complied\nabyed bayed\ntav vat\nunmated untamed\nlooter tooler\nbedlam beldam\ncollide collied\nscepter sceptre\nscepter specter\nsceptre spectre\nspecter spectre\narts rats\nrats tars\nstar tsar\nslitted stilted\nfire rife\nmisfield misfiled\namps maps\nmaps pams\npams samp\ndaimen maiden\nserves verses\ndoles lodes\ndoles soled\nbigly bilgy\nleavy vealy\nhotter tother\nrowdinesses wordinesses\ntaw twa\ntaw wat\ngaur guar\nnest nets\nnest sent\nnets tens\nsent tens\ngum mug\nbos sob\ngilded glided\nindenter intender\ngush sugh\nhugs sugh\ndiscanted distanced\noraches roaches\ntangos tongas\nsleet steel\nsteel stele\nmongers morgens\njar raj\ndais said\nsadi said\ngurging rugging\nfore froe\nserved versed\nlure rule\nkilting kitling\nciders dicers\nterreen terrene\ncompilers compliers\nsnatchers stanchers\nfast fats\ncertitudes rectitudes\nsalivas salvias\ndesert deters\nconcents connects\neyers eyres\nskirt stirk\ncarver craver\nlenses lessen\npatulent petulant\nmoues mouse\ngrip prig\nflooder floored\nnoter toner\ntenor toner\nnape pane\nneap pean\naunts tunas\ntarge terga\noverbusy overbuys\nains anis\ncorny crony\nsaw was\nracket tacker\nmeets metes\nmeets teems\nhoed ohed\ngarments margents\nalp lap\nlap pal\nalkalies alkalise\narider raider\ngangers naggers\nwhoso woosh\nis si\nshier shire\nragtags tagrags\nileus lieus\ndenotations detonations\ndiploe dipole\nunmiters unmitres\ncruet curet\ncruet eruct\ncuret cuter\neruct truce\ndeckels deckles\nkeirs kiers\nsiker skier\nplanet platen\nmeager meagre\nawe wae\nfirer frier\nfirer rifer\nirides irised\nho oh\nservo verso\naerologies areologies\nhost hots\nhost tosh\nhots soth\nsoth tosh\ndees seed\nfate feta\nfeat feta\nmerit remit\nmiter mitre\nmiter timer\nsnoopy spoony\nsopor spoor\nferly refly\npatios patois\nben neb\nlaird liard\ndabbler rabbled\ntawer water\nmarital martial\nscaped spaced\ngal lag\ncalks lacks\nblast blats\ncondor cordon\nhurtless hustlers\nspeers sprees\nargils grails\nglairs grails\nindues undies\nnudies undies\nadds dads\nmot tom\nleaving vealing\ndottel dottle\ndottel lotted\nginger nigger\nceros cores\ncores corse\nbolos lobos\ndamper ramped\nsennit tennis\nage gae\nfrumenties furmenties\nsnaws swans\nnetters tenters\nwarps wraps\nribbons robbins\nburble rubble\nalgums almugs\nbasest basset\nbasset bastes\nrepining ripening\nmonetize zonetime\ncerite recite\nnesses senses\nlowes lowse\nhankerers harkeners\nnoses sones\nluna ulna\nulan ulna\nmemos momes\nnapes panes\nneaps peans\nsneap spean\nmacho mocha\nparted prated\nacme came\ncame mace\nepics spice\nportends protends\nlures rules\nlunas ulnas\nulans ulnas\nmonograms nomograms\ndower rowed\ngirths griths\nrowdily wordily\nthere three\nalms lams\ncento conte\nrickets tickers\ndouser roused\nroused soured\npositing sopiting\nort rot\nrot tor\nmisdeal mislead\ndagger ragged\nmonger morgen\ndeceiver received\nabbe babe\nmantel mantle\nmantel mental\nunburden unburned\ngamma magma\nbrede breed\nlenis lines\nliens lines\nslimes smiles\nlavers ravels\nsalver slaver\nserval versal\nwrist writs\nquiet quite\nsherds shreds\narmets ramets\nmaters matres\nmaters tamers\nramets tamers\nkues ukes\nalts lats\nlast lats\nlast salt\nsalt slat\nlegist legits\ndubber rubbed\nstey stye\never veer\nlopers polers\nblankest blankets\nrogued rouged\nterreens terrenes\nauric curia\ntushes tusseh\ncalibers calibres\ncarbons corbans\ngeld gled\ntwist twits\nstorying stroying\ncam mac\ndag gad\ncanine cannie\ngirded grided\nways yaws\npeels peles\nsleep speel\ndeposer reposed\nbarging garbing\noption potion\npintos piston\npiston postin\ndallies sallied\nbogs gobs\nsites sties\nbeam bema\nminuet minute\nbeds debs\npenial pineal\nscarped scraped\nmiens mines\nbuglers bulgers\nrattan tartan\nfoetors footers\namir mair\ndiscanting distancing\ndirge ridge\nmouses mousse\ndirer drier\ndirer rider\nexample exempla\nlosing soling\nanserous arsenous\nanas ansa\ngams mags\nsalty slaty\nbrunt burnt\ndowry rowdy\nrowdy wordy\nfores froes\nlasts salts\nsalts slats\nchancres cranches\ndew wed\ndaddles saddled\npest pets\npest sept\nreivers rievers\ndeil deli\ndeil diel\ndiel lied\nachier cahier\nhoars horas\nbrags grabs\ngarbs grabs\npiss psis\npiss sips\nnoting toning\ncaress carses\ncarses crases\nbugle bulge\nlear real\nlowered roweled\nhaps hasp\nhasp pash\nclematis climates\nfirth frith\ncipolins picolins\nquestionnaire questionniare\nspeired spiered\nargals graals\ndeviser revised\nbus sub\ncertify rectify\nganger nagger\nwildness windless\nreeved veered\nlairing railing\nlentils lintels\nsinew wines\ndesired resided\nmorns norms\nrecrating retracing\nretracing terracing\nwiden wined\npanel penal\nplane plena\nholes hosel\nousting outsing\nhins hisn\nhins sinh\ndam mad\ndotter rotted\nganged nagged\nshent thens\nbodies dobies\nleasable sealable\nzaffers zaffres\nsinglet tingles\nmiserly misrely\ngaen gane\nbeams bemas\nmuss sums\ndawing wading\naltitude latitude\nberate rebate\nmonads nomads\nnival vinal\nfaltboats flatboats\ndefiler refiled\npour roup\nshiers shires\nnoters toners\ntenors toners\ncarns narcs\naunt tuna\nspout stoup\nbusy buys\nloving voling\nrecourses resources\nlairds liards\nwakes wekas\ngodlings lodgings\ndottels dottles\nspite stipe\nrenews resewn\nloves voles\nexcepting expecting\nfemurs fumers\ncask sack\nbirder birred\nrecourse resource\naby bay\nloused souled\nnervier vernier\nkarns narks\nknars snark\nnarks ranks\nnits tins\neagers eagres\neagers ragees\neagres ragees\nnetts tents\nouter outre\nlivenesses vilenesses\ndammer rammed\nsprites stripes\nstirpes stripes\nnews sewn\nnews wens\nmapper pamper\nfeels flees\npartan tarpan\ntarpan trapan\nruns urns\nacne cane\netched teched\nnaives navies\nbeer bree\nmaligner malinger\nplanets platens\ntheres threes\nmorn norm\nbesliming besmiling\nsleeping speeling\nratted tarted\ndirges ridges\ncanst cants\nactions cations\nmacerates racemates\nagonies agonise\nskeans sneaks\ncourse source\nares arse\nares eras\narse rase\nears eras\nsear sera\nraws wars\ndesire reside\nnus sun\nnus uns\nblots bolts\ndaps pads\nsadis saids\narises raises\nsewer sweer\ndenotation detonation\nfelid filed\nfield filed\nfiled flied\nnooser sooner\nmooring rooming\nconservations conversations\ncasks sacks\nboost boots\ndel led\neld led\nanoxic axonic\ncrud curd\npaters tapers\nprates trapes\ninfarct infract\nunite untie\neulogies eulogise\nsamites tamises\nad da\ndiols idols\nsloid solid\nsoldi solid\ndeers drees\ndeers reeds\nredes reeds\nredes seder\nseder sered\nmeet mete\nmeet teem\npail pial\ngelatine legatine\ndrag grad\npared raped\nalbs labs\nbals labs\ndetester retested\nbeslimed besmiled\nenologies neologies\nbut tub\nbarrette berretta\naction cation\nmanege menage\nuntired untried\nerst rest\nrest rets\nbares baser\nbares braes\nbaser saber\nbears braes\nsaber sabre\nbibs sibb\naccouters accoutres\nspade spaed\nlins nils\ncombats tombacs\ncondoles consoled\nkeeps peeks\npeeks pekes\nbarde bared\nfoaled loafed\ngot tog\nmite time\nthew whet\ngaun guan\njeered jereed\nhaets haste\nhaets hates\nhaets heats\nbeslime besmile\nate eta\nate tae\neat eta\neat tae\neta tea\ntae tea\ngenro negro\ngoglets loggets\naggers eggars\naggers gagers\nsagger seggar\nreservers reversers\ngilders gliders\nvails vials\nduds sudd\nfeet fete\nnatters rattens\ncoax coxa\ngilding gliding\naetheric hetaeric\nwilting witling\nburkes busker\nconcerted concreted\nkame make\nmien mine\ndater rated\nrated tared\nsprats straps\nroguing rouging\nsipes spies\nsuers users\ndwindles swindled\nroster sorter\nbids dibs\nacids caids\ncadis caids\nbolar lobar\nlabor lobar\nstruts sturts\ncaret carte\ncaret cater\ncarte crate\ncrate trace\nsleets steels\nsteels steles\npotful topful\nsuable usable\ncondors cordons\ngoers gores\ngores gorse\ngores ogres\nbolster lobster\nsnye syne\ncalve clave\nbig gib\naah aha\nbased sabed\nnit tin\nawn wan\nservant versant\nleavers vealers\neh he\ncumins mucins\nbrunet burnet\nrecusing securing\ncions coins\ncions icons\nbole lobe\ncostumer customer\nelector electro\ncantors cartons\ncartons cratons\nlouver louvre\nshoer shore\nmures muser\nnerts rents\nnerts terns\nabler baler\nchicle cliche\ndemos domes\ndomes modes\npepo pope\nmillimho milliohm\nicecap ipecac\nspotlight stoplight\nuntilted untitled\nrochet tocher\nperfects prefects\nochers ochres\nangel angle\nhandless handsels\nferries refries\nrefires refries\ngoiters goitres\nresows serows\npurees rupees\nalps laps\nlaps pals\npals salp\nsalp slap\nalmes lames\nlames males\npuree rupee\nbestirs bisters\nbisters bistres\nboogers goobers\nlienable lineable\nlascar rascal\nrouters tourers\ngrips prigs\nglues gules\ngules luges\nmust muts\nsmut stum\nfirths friths\ndeified edified\ngelation legation\nfists sifts\nbikes kibes\ndissentions distensions\ngrandam grandma\nsopors spoors\nplums slump\nelans leans\ncess secs\nsneaped speaned\narty tray\nminuets minutes\nredates sedater\ndoe ode\nveinal venial\nvenial vineal\nelan lean\nmagus sagum\nadd dad\ndodging godding\nlilt till\nfiefs fifes\nfader fared\nleer reel\nlamenesses malenesses\nway yaw\ngars rags\nowes owse\nowes woes\nreefed refeed\ncompiles complies\ndrupe prude\ndiopter dioptre\nloper poler\nsilverers sliverers\nburas bursa\nenisle ensile\nsalon solan\nflairs frails\nanchor archon\nailment aliment\npeckier pickeer\ncud duc\nspeeder speered\newe wee\nantimonies antinomies\ngargles raggles\nseating teasing\nbugles bulges\ntrails trials\ndure rude\nrude rued\nkins sink\ncuracao curacoa\nbarkier brakier\nmolars morals\nsegni sengi\nsengi singe\nurase ursae\nureas ursae\nverst verts\ntrail trial\nmachos mochas\npore rope\nmotet motte\nmotet totem\nsmuts stums\ndanker darken\ndanker ranked\ndarken narked\nnarked ranked\nspited stiped\nlimo milo\nbogy goby\ncapers pacers\nskips spiks\nmonadisms nomadisms\nlevo love\nlove vole\ndies ides\nzaffer zaffre\ngaoled goaled\ncasking sacking\ncourses sources\ncascade saccade\ncarvers cravers\nrival viral\nrite tire\ntier tire\ndalles ladles\nfoaling loafing\nars ras\nsloids solids\nunites unties\nfocuses fucoses\ncouthier touchier\ndipper ripped\nleno lone\ngips pigs\nsought toughs\nawes waes\nbore robe\nmarblers ramblers\ntaxes texas\ncasque sacque\ncitherns cithrens\nladrons lardons\nincests insects\nmarques masquer\ncolonies colonise\nmovers vomers\nperfect prefect\nlured ruled\nsoldier solider\nramsons ransoms\nlope pole\nskating staking\npotstones topstones\nversets verstes\nbiltong bolting\nmonarchies nomarchies\nbalded bladed\ninter niter\nniter nitre\nblouses boluses\ncaper pacer\ngoer gore\ngore ogre\nsuit tuis\ndunging nudging\npeers peres\npeers prees\nperes perse\nperes prees\nperse prese\nprees prese\nspeer spree\naltruists ultraists\nbonus bosun\npus sup\npus ups\nleys lyes\nlyes lyse\nreliving reviling\nhahs hash\nruinous urinous\ncaped paced\nbaud daub\nkyte tyke\nshut thus\nunderdog undergod\nferine refine\nsikes skies\nrawer warer\nem me\nsilvered slivered\nunserved unversed\nlimes miles\nslime smile\npores poser\npores ropes\nnowts towns\nnowts wonts\nslipt spilt\nspilt split\ngarrets garters\ngarters graters\nmonad nomad\nburies busier\nburies rubies\ndeils delis\nidles isled\ncausers saucers\nskint stink\npaw wap\npadri pardi\nscarpers scrapers\nfor fro\nlisted silted\ndahs dash\ndeferrer referred\naals alas\nneeps peens\npeens penes\nfortes foster\nfoster softer\npares parse\npares rapes\nparse prase\npears reaps\nprase presa\ngingko ginkgo\npartons patrons\npartons tarpons\nmoored roomed\nlatrine ratline\nkaons koans\ndiscreet discrete\naxel axle\nsnatching stanching\nhalloed hollaed\nkist kits\ncertes terces\ngutless tugless\ngape page\nfarmed framed\npercent precent\nbarer barre\nkoas okas\nkoas soak\noaks okas\ndeserver reserved\nreserved reversed\nconcent connect\nbolo lobo\nkeir kier\njato jota\nferlies reflies\nrefiles reflies\nskated staked\nlienal lineal\nlaterites literates\npays pyas\npays yaps\nhallo holla\nsnooping spooning\nunlit until\ncompeers comperes\nleaps peals\npales salep\nlevered reveled\nploy poly\nrages sager\nnattered rattened\nparing raping\ncoroners crooners\nmane name\nname nema\ndevons dovens\ntawers waters\nchicles cliches\nrattish tartish\nsaliva salvia\nbaric rabic\ndo od\neager eagre\neager ragee\neagre ragee\ninching niching\npertest pretest\nbarege bargee\nmonarchy nomarchy\nslept spelt\nnuder under\nnaivest vainest\naider aired\nroutes souter\ntiros trios\ntrios trois\nbarbets rabbets\nbarrets barters\nraves saver\ncascabel cascable\nidly idyl\nchiel chile\nbed deb\ndart drat\ndrat trad\nozonides ozonised\nsnoops spoons\nriata tiara\ntews wets\nwest wets\npride pried\nbun nub\ngerents regents\nbins nibs\ntewed tweed\ncape pace\nalefs fleas\nbans nabs\nmauger maugre\noasis ossia\naxemen examen\nkeens knees\nskeen skene\ncoset cotes\nreagin regain\nprecis prices\nabbes babes\ncloy coly\nsacred scared\npows wops\nkames makes\nkames samek\nboss sobs\nlimestone milestone\nripplet tippler\ngledes gleeds\nawning waning\ngustier gutsier\nbolder bordel\nscarper scraper\nsneaps speans\nimpetus imputes\nkeels leeks\nfarming framing\nmope pome\npoem pome\nsloops spools\nprims prism\nconked nocked\ndawdle waddle\nenrols nerols\nschemer schmeer\ndews weds\nrowth worth\nworth wroth\nlilting tilling\nrotch torch\nmote tome\nscarping scraping\neves vees\nrecedes seceder\nconserving conversing\ntenia tinea\ngums mugs\nleap peal\nstardoms tsardoms\ndormancy mordancy\nencoder encored\nmutuels mutules\ncasual causal\nsonnet tonnes\naged egad\naged gaed\nsubbed subdeb\nbid dib\ndrags grads\npilus pulis\neons noes\neons sone\nnoes nose\nnoes ones\nnose sone\nefts fets\nebonies ebonise\nkraits traiks\njollity joltily\nbabuls bubals\nmeter metre\nmeter retem\nremet retem\nspirt sprit\nspirt stirp\nsprit strip\nstirp strip\nburs rubs\ndrabbest drabbets\nnowt town\nnowt wont\nwaives wavies\ncoinfers conifers\nbombing mobbing\nlively vilely\norach roach\nfairs fiars\nserries sirrees\nvest vets\nmacerate racemate\nweest weets\nbars bras\nparties pastier\npiaster piastre\nacmes cames\ncames maces\nrising siring\nfloats flotas\nbeslimes besmiles\nhankerer harkener\nhoots sooth\nsalps slaps\nloots lotos\nloots tools\nlotos sotol\nsotol stool\nbestir bister\nbister bistre\nediles elides\npavid vapid\ndongola gondola\nbags gabs\npropenes propense\nduffels duffles\nrates tares\nbemired berimed\ncasuals causals\ncafe face\ncuracaos curacoas\ngapes pages\ndanger gander\ndanger ranged\ngander garden\nspotlights stoplights\nbemire berime\nberime bireme\nopts pots\npost pots\npots tops\nspot stop\nburbling rubbling\narles rales\nearls lares\nlares laser\nlares rales\nlears reals\nrealter relater\newer weer\nweer were\ncorps crops\nalone anole\ndimer rimed\nmired rimed\nlascars rascals\nkhans shank\npiasters piastres\ndire ride\nfief fife\nmeeters teemers\ncaption paction\ncarving craving\nplastery psaltery\nsorus sours\nsalving slaving\nworthful wrothful\nbluesy blueys\nargal graal\nretired retried\nabys bays\nrheas shear\nstenos stones\ncarps craps\nscarp scrap\nlists silts\nsilts slits\ncoves voces\nagger eggar\nagger gager\ndefiner refined\nsaltiest slatiest\neros ores\nores roes\nroes rose\nrose sore\nredo rode\ndeys dyes\nhereto hetero\nlouder loured\ndissention distension\nmirex mixer\nbicorn bicron\namids maids\ncaps pacs\ncade dace\ndom mod\ndoms mods\nisms sims\nmiss sims\nalien aline\naline anile\npar rap\ntantara tartana\ngonging nogging\nnattering rattening\ngunless gunsels\ndairies diaries\naim ami\ndealing leading\nargons organs\ngroans organs\nbasin sabin\nnabis sabin\nalgin align\nmares marse\nmares maser\nirks kris\ndeem deme\ndeem meed\ndeary deray\ndeary ready\nkoa oka\noak oka\nendures ensured\ndoper roped\npored roped\ngases sages\nreserve reverse\nreveres reverse\nreveres severer\nnodes nosed\nlevins livens\ncams macs\ndinks kinds\nessoins osseins\nless sels\ngateway getaway\nkite tike\nmangel mangle\nnous onus\ntheater theatre\negests geests\nrogue rouge\nlenes lense\nsepulchers sepulchres\ngammas magmas\nseeks skees\nhade haed\nhaed head\npepos popes\ndigs gids\nlevering reveling\nassert asters\nsettee testee\nmiring riming\ngurged rugged\noast oats\noats taos\ntango tonga\nguides guised\nsaint tains\nsatin stain\npeltry pertly\nresails serails\nserails serials\nratine retina\npuses supes\nspues supes\ndons nods\nnettier tentier\nan na\nrives siver\nrives vires\nviers vires\ngat tag\nfalcon flacon\nalgor argol\nlest lets\nrouter tourer\nwarp wrap\npates tapes\ntapes tepas\nparer raper\ncadasters cadastres\nsliming smiling\ndecliner reclined\noutslept outspelt\ndenes dense\ncauses sauces\nneep peen\nmerits remits\nmiters mitres\nmiters timers\ntired tried\nbayadeer bayadere\ncascabels cascables\ncreeps crepes\nno on\ncerci ceric\ndates sated\nstade tsade\noes ose\ngenus negus\nloath lotah\npennate pentane\nedile elide\nreest reset\nsteer stere\ngloss slogs\ncades cased\ncades daces\npaltry partly\npartly raptly\nbogies gobies\ndeer dere\ndeer dree\ndeer reed\ndere dree\ndere rede\nrede reed\nnoted toned\nhaems hames\ncastors costars\ncenter centre\napter pater\npater taper\nreserving reversing\nfer ref\nnatter ratten\natomies atomise\nfodder forded\nsnoopier spoonier\ngluers gruels\ncrust curst\ndorp drop\ndrop prod\nantimony antinomy\nplanate platane\ntenias tineas\nhider hired\nstrut sturt\nbens nebs\nwarder warred\nlooping pooling\nquestionnaires questionniares\nparts prats\nparts tarps\nprats traps\nsprat strap\ntarps traps\nministers misinters\nskirrets skirters\nah ha\nwarstle wrastle\ndos ods\ndos sod\numbels umbles\nnote tone\ncapes paces\nscape space\ncylix xylic\nnot ton\narmies ramies\nfiend fined\nample maple\nkleig klieg\nlimos milos\neyen eyne\ndeifier edifier\ndeifier reified\neels lees\nlees seel\nduffel duffle\nduffel luffed\nrise sire\nbombers mobbers\nnows sown\nnows wons\nowns wons\nsilverer sliverer\ncascades saccades\nhordes horsed\nbads dabs\ncreep crepe\naft fat\ndingles singled\npalters platers\nplaster psalter\nrees seer\nseer sere\ntactic tictac\ndafter rafted\nfarted rafted\ntarns trans\npiles plies\nslipe spile\nspeil spiel\nspiel spile\nunderdogs undergods\nhegari hegira\ndegrader regraded\nregarded regraded\nleis lies\nchiels chiles\nchiles chisel\nladron lardon\nalburnum laburnum\ntiters titres\nplaiter platier\nmus sum\nnett tent\nunited untied\nrepins ripens\nfeel flee\nbrughs burghs\nbur rub\nbates betas\nbates tabes\nbeast beats\nbeats betas\narm ram\nmar ram\namp map\nmap pam\nferried refried\nrefired refried\nalan anal\ndiploes dipoles\nmonarch nomarch\ndining niding\nreests resets\nsteers steres\nragtag tagrag\nawry wary\nincest insect\nincest nicest\nunmiter unmitre\nlutes tules\ncerites recites\nmirs rims\nsanities sanitise\nnoosers sooners\nsnipes spines\napt pat\npat tap\nillicit illitic\ncarn narc\nrust ruts\nlass sals\nleaped pealed\nbromos brooms\nbrugh burgh\nsachet taches\nkites tikes\nosar soar\nsoar sora\nkarn nark\nnark rank\nridden rinded\nlilted tilled\nbauds daubs\ninsert inters\ninters niters\nniters nitres\ntriens trines\ngoiter goitre\nbombed mobbed\nmat tam\naldol allod\nmeeting teeming\nporing roping\nobserve obverse\nlops pols\ndodged godded\nhoop pooh\nsnips spins\nroot roto\nroto toro\nlapises lipases\nlop pol\nlasters salters\nsalters slaters\nfisted sifted\nenisling ensiling\nangels angles\nsawers sewars\nsewars swears\nfarts frats\nfarts rafts\nindenting intending\ncasked sacked\nregelated relegated\nkeister kiester\ncorks rocks\ngargle raggle\neel lee\npow wop\nlouvers louvres\nacers acres\nacres cares\ncares carse\ncares races\nexploder explored\ntilted titled\nrepin ripen\nrepertoires repertories\ngirts grits\ngrist grits\ngrits trigs\nphilters philtres\nsestet testes\nshist shits\nyodel yodle\nperforms preforms\nnetty tenty\nalma lama\ndedans desand\nsadden sanded\nalme lame\nlame male\nammine immane\nit ti\ndangered gandered\ngandered gardened\nnaevi naive\ndetailer retailed\nlopes poles\nluster lustre\nluster ulster\nlustre rustle\nclutches cultches\ngerent regent\nloot tool\nramson ransom\nfare frae\nfear frae\nspeiled spieled\ngallates galletas\ngallates tallages\namin main\npistons postins\nmotes tomes\ninches niches\nfires fries\nfries frise\ncalking lacking\nalter artel\nalter later\nartel ratel\nlater ratel\nlater taler\nringlets tinglers\nabmhos abohms\nbuss subs\ndoat toad\nrowdier wordier\nwordier worried\nspots stops\nnapper rappen\ncalques claques\ntermors tremors\nlatents talents\ndups puds\noils silo\nsilo soli\nsoil soli\nsmites stimes\namigo imago\nleers reels\nbooger goober\nbogan goban\ngip pig\nsails sials\ncause sauce\nlooped pooled\nbarbet rabbet\nmidspaces misspaced\ndawed waded\nduos ouds\nduos udos\ngambler gambrel\npalmary palmyra\nsaggers seggars\ngust guts\nguts tugs\nmarble ramble\ncurdier curried\nravages savager\nart rat\nrat tar\nrealters relaters\nadman daman\nhallooing holloaing\now wo\nelks leks\ntermor tremor\nmoraines romaines\ncouther toucher\nelvers levers\nlevers revels\ncarved craved\ncate tace\nnotes tones\nsteno stone\ndig gid\nsepulcher sepulchre\ncertification rectification\nmast mats\nmats tams\ncrafted fracted\nferritic terrific\ndignifies signified\nmoraine romaine\nraddles saddler\nocherous ochreous\ncitrin nitric\ndawdlers waddlers\nmonadism nomadism\ngong nogg\ncalker lacker\ndoes dose\ndoes odes\ncertifying rectifying\ngaoling goaling\nthaws whats\nleering reeling\nmooriest roomiest\nserrates terrases\nlapper rappel\narils rails\nlairs liars\nlairs rails\nliars liras\nliars rials\nrails rials\ncarpel parcel\nabmho abohm\nclanging glancing\nsniped spined\nhitter tither\nradicels radicles\nelegies elegise\neviler veiler\nrelive revile\nhap pah\nmiry rimy\nnaps pans\nsnap span\ntort trot\nparses passer\nparses prases\nspares sparse\nruinated urinated\nbarret barter\ncaller cellar\nreinform reniform\neft fet\nloom mool\nsaves vases\ncarer racer\nfalcons flacons\nfilers fliers\nfilers lifers\npanted pentad\ndefer refed\nalburnums laburnums\npit tip\nlaver ravel\nteaming tegmina\nsetal steal\nslate stale\nstale stela\nsteal stela\ntaels tales\ntaels teals\nteals tesla\nboors broos\ndeuce educe\ncopes copse\nowe woe\nferes frees\nrote tore\ndoom mood\nappels apples\nthorning throning\nspouts stoups\ndowries rowdies\ncruse curse\ncures curse\nlase sale\nleas seal\ngaping paging\nratos rotas\nratos taros\nrotas toras\ntaros toras\ndouses soused\namid maid\nfakirs kafirs\nosmatic somatic\napses pases\napses spaes\npases passe\ncorking rocking\nroser sorer\ndive vide\nvide vied\nadzes dazes\nget teg\nlower rowel\nintro nitro\nrotten torten\nay ya\nsaltier saltire\nsaltier slatier\nrallies sallier\nruinating urinating\nbemires berimes\nberimes biremes\ncode coed\naptly patly\nrillet tiller\ndeification edification\nrites tires\ntiers tires\ntires tries\nratter tarter\notters toters\ngaurs guars\ncodder corded\nsherd shred\neve vee\nquinnat quintan\ndirest driest\nlino lion\nlion loin\nloin noil\norbs robs\nsues uses\ngrandams grandmas\narmoires armories\npests septs\nrouted toured\nseaters teasers\nteasers tessera\nrelives reviles\ngateways getaways\nladder larded\nhay yah\ncarets cartes\ncarets caters\ncartes caster\ncartes crates\ncrates traces\nsoars soras\nhenequin heniquen\npluses pulses\nnos ons\nnos son\nabide abied\nhaptene heptane\nmonetizes zonetimes\ngan nag\nskate stake\nley lye\ntabus tubas\nrectos sector\npanne penna\npast pats\npats taps\nlilts tills\nhenequins heniquens\namine anime\ncaners casern\nresail serail\nserail serial\nunspilt unsplit\ncompiler complier\npairs paris\nnickel nickle\nforward froward\nenergies energise\nnaris ranis\nnaris sarin\nrains ranis\ndarts drats\nbrunets burnets\nlota tola\ncalms clams\nratting tarting\nmanos mason\nmanos monas\nmoans monas\nmonas nomas\ntilde tiled\ncarping craping\nkae kea\ncohered ochered\nkales lakes\ncorklike rocklike\nalef flea\nfeal leaf\nkeening kneeing\ntorts trots\narms rams\nmars rams\nplasters psalters\nargil grail\nglair grail\nform from\nuncrated untraced\ngaped paged\nrises sires\ngingers niggers\nplus puls\nfelt left\ndiver rived\nscarps scraps\natlas talas\nwarstling wrastling\nptoses stopes\nbarkiest brakiest\nlusters lustres\nlusters ulsters\nlustres rustles\nskeet steek\npervious previous\nseries sirees\nelectrode electroed\nkenotic ketonic\ncertifications rectifications\nacred arced\nacred cared\narced raced\ncared raced\nlooms mools\nserve verse\nroost roots\nroots rotos\nrotos toros\ntoros torso\nelver lever\nlever revel\neath hate\nhaet hate\nhaet heat\nbas sab\ncenters centres\ncaptor cartop\ngaols goals\nberates rebates\ncarven craven\nsat tas\ncods docs\naptnesses patnesses\nchases chasse\nbare brae\nbear brae\npeering preeing\ndeems demes\ndeems meeds\nseated teased\nchopine phocine\nmany myna\nslowness snowless\ncomet comte\nbelated bleated\ncodex coxed\nsatirist sitarist\noptions potions\ntabu tuba\naril rail\nlair liar\nlair rail\nliar lira\nliar rial\nrail rial\npeel pele\ngarmenting margenting\nyodels yodles\nindenters intenders\nbedrugged begrudged\nlasting salting\nsalting slating\nslating staling\nbog gob\nlate tale\ntael tale\ntael teal\ntale tela\nteal tela\nplasms psalms\nban nab\nreinsert reinters\ntavs vats\nvast vats\nhanker harken\nfiles flies\ndeep peed\nleaver vealer\nconservation conversation\nahem haem\nhaem hame\nbabul bubal\nleviable liveable\narising raising\nruinate urinate\nuranite urinate\nbate beta\nbeat beta\nrandies sandier\nduster rusted\nmover vomer\nrowdiest wordiest\nnope pone\nglede gleed\nmon nom\ncork rock\nhereat reheat\nemits smite\nmetis mites\nmites times\nsmite stime\ntimbers timbres\nmaligners malingers\nhooped poohed\njest jets\nslitting stilting\nshout thous\ntelos toles\ntumblers tumbrels\nits tis\nsit tis\nbruin burin\nregarding regrading\ndeny dyne\nbis sib\ngenuses neguses\nfilter lifter\ngarmented margented\notter toter\nages gaes\ngongs noggs\ngingkoes ginkgoes\nstardom tsardom\nhardier harried\nunbar urban\nleper repel\nvailing vialing\noho ooh\nbedrugging begrudging\nskates stakes\nmaned menad\nmaned named\nrowths worths\nfelts lefts\nrillets tillers\nhooping poohing\nfrumenty furmenty\nlimpsy simply\nlawed waled\nnereis serein\nglass slags\nnew wen\ncarters craters\ncraters tracers\nhurtles hustler\nasps saps\npass saps\nsaps spas\nlores loser\nlores roles\nlores sorel\norles roles\nleaser sealer\nreales sealer\ndangering gandering\ngandering gardening\naims amis\naims sima\nbarking braking\ndines nides\ntailles tallies\nsilvers slivers\nbag gab\nmonacid monadic\nmonadic nomadic\npalter plater"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-4065519467",
  "source": {
   "name": "exercise 15.1",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "Solution: <http://thinkpython2.com/code/Circle.py>.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": false,
   "preExecuteCommand": "",
   "command": "python3 code/classes.py",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "Remove any printing from your code and then add the following to the end:\n\n    def main():\n        box = Rectangle()\n        box.width = 100.0\n        box.height = 200.0\n        box.corner = Point()\n        box.corner.x = 50.0\n        box.corner.y = 50.0\n    \n        circle = Circle\n        circle.center = Point()\n        circle.center.x = 150.0\n        circle.center.y = 100.0\n        circle.radius = 75.0\n    \n        print(point_in_circle(box.corner, circle))\n        print(rect_in_circle(box, circle))\n        print(rect_circle_overlap(box, circle))\n    \n    \n    if __name__ == '__main__':\n        main()\n\nThen, submit your code using the button below:",
   "learningObjectives": "",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "",
     "output": "False\nFalse\nTrue"
    }
   ]
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2417468351",
  "source": {
   "name": "exercise 16.1",
   "showName": false,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Use the code below and the code you have written to calculate the pace of a marathon runner (26.2 miles)\n\n    race_time = Time()\n    race_time.hour = 3\n    race_time.minute = 34\n    race_time.second = 5\n",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "d6353f3a-49a4-e812-0dfe-df01b78e0a3c",
     "correct": false,
     "answer": "7.59 minutes/mile"
    },
    {
     "_id": "cad603b8-0eba-991f-138b-88e35e9534a2",
     "correct": true,
     "answer": "8.17 minutes/mile"
    },
    {
     "_id": "3a89cb23-3a96-318c-5925-734c1cb16d9c",
     "correct": false,
     "answer": "9.23 minutes/mile"
    },
    {
     "_id": "8f6a47b4-15d3-6fce-f4a1-d6d7e8b2dfc0",
     "correct": false,
     "answer": "10.05 minutes/mile"
    }
   ]
  }
 }
]